{"version":3,"file":"static/js/6292.c8d067c0.chunk.js","mappings":"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","sources":["components/container/PageContainer.js","components/forms/custom-elements/CustomCheckbox.js","components/forms/custom-elements/CustomDisabledButton.js","components/forms/custom-elements/CustomFormLabel.js","components/forms/custom-elements/CustomOutlinedButton.js","components/forms/custom-elements/CustomRadio.js","components/forms/custom-elements/CustomSelect.js","components/forms/custom-elements/CustomTextField.js","components/forms/fb-elements/FbInputVariants.js","components/forms/fb-elements/FbAsset.js","components/forms/fb-elements/FbCircuit.js","components/forms/fb-elements/FbPickList.js","components/forms/fb-elements/FbCML.js","components/forms/fb-elements/FbArea.js","layouts/full-layout/breadcrumb/Breadcrumb.js","utils/API.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BpIcon = styled('span')(({ theme }) => ({\r\n  borderRadius: 3,\r\n  width: 21,\r\n  height: 21,\r\n\r\n  boxShadow:\r\n    theme.palette.mode === 'dark'\r\n      ? '0 0 0 1px rgb(16 22 26 / 40%)'\r\n      : 'inset 0 0 0 1px rgba(0,0,0,.2)',\r\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.4)' : '',\r\n\r\n  '.Mui-focusVisible &': {\r\n    outline: '0px auto rgba(19,124,189,.6)',\r\n    outlineOffset: 2,\r\n  },\r\n  'input:hover ~ &': {\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.primary : theme.palette.primary,\r\n  },\r\n  'input:disabled ~ &': {\r\n    boxShadow: 'none',\r\n    background: theme.palette.mode === 'dark' ? 'rgba(57,75,89,.5)' : 'rgba(206,217,224,.5)',\r\n  },\r\n}));\r\n\r\nconst BpCheckedIcon = styled(BpIcon)({\r\n  boxShadow: 'none',\r\n  width: 21,\r\n  height: 21,\r\n  '&:before': {\r\n    display: 'block',\r\n    width: 21,\r\n    height: 21,\r\n    backgroundImage:\r\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n      \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n      \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n    content: '\"\"',\r\n  },\r\n});\r\n\r\n// Inspired by blueprintjs\r\nfunction CustomCheckbox({ bgcolor, ...props }) {\r\n  return (\r\n    <Checkbox\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={\r\n        <BpCheckedIcon\r\n          sx={{\r\n            backgroundColor: bgcolor || 'primary.main',\r\n          }}\r\n        />\r\n      }\r\n      icon={<BpIcon />}\r\n      inputProps={{ 'aria-label': 'Checkbox demo' }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nCustomCheckbox.propTypes = {\r\n  bgcolor: PropTypes.string,\r\n};\r\n\r\nexport default CustomCheckbox;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button } from '@mui/material';\r\n\r\nconst CustomDisabledButton = styled((props) => <Button {...props} />)(({ theme }) => ({\r\n  backgroundColor: `${theme.palette.mode === 'dark' ? 'rgba(73,82,88,0.12)' : '#ecf0f3'}`,\r\n}));\r\n\r\nexport default CustomDisabledButton;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst CustomFormLabel = styled((props) => (\r\n  <Typography variant=\"h6\" {...props} component=\"label\" htmlFor={props.htmlFor} />\r\n))(() => ({\r\n  marginBottom: '5px',\r\n  marginTop: '15px',\r\n  display: 'block',\r\n}));\r\n\r\nexport default CustomFormLabel;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button } from '@mui/material';\r\n\r\nconst CustomOutlinedButton = styled((props) => <Button {...props} />)(({ theme }) => ({\r\n  border: `${\r\n    theme.palette.mode === 'dark'\r\n      ? '1px solid rgba(255, 255, 255, 0.2)'\r\n      : '1px solid rgba(73,82,88,0.12)'\r\n  }`,\r\n\r\n  color: `${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.5)' : 'rgba(73,82,88,0.5)'}`,\r\n  '&:hover': {\r\n    border: `${\r\n      theme.palette.mode === 'dark'\r\n        ? '1px solid rgba(255, 255, 255, 0.09)'\r\n        : '1px solid rgba(73,82,88,0.12)'\r\n    }`,\r\n    backgroundColor: `${theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.09)' : '#ecf0f3'}`,\r\n  },\r\n}));\r\n\r\nexport default CustomOutlinedButton;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Radio from '@mui/material/Radio';\r\n\r\nconst BpIcon = styled('span')(({ theme }) => ({\r\n  borderRadius: '50%',\r\n  width: 21,\r\n  height: 21,\r\n  boxShadow:\r\n    theme.palette.mode === 'dark'\r\n      ? '0 0 0 1px rgb(16 22 26 / 40%)'\r\n      : 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.4)' : '',\r\n  '.Mui-focusVisible &': {\r\n    outline: '2px auto rgba(19,124,189,.6)',\r\n    outlineOffset: 2,\r\n  },\r\n  'input:hover ~ &': {\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.primary : theme.palette.primary,\r\n  },\r\n  'input:disabled ~ &': {\r\n    boxShadow: 'none',\r\n    background: theme.palette.mode === 'dark' ? 'rgba(57,75,89,.5)' : 'rgba(206,217,224,.5)',\r\n  },\r\n}));\r\n\r\nconst BpCheckedIcon = styled(BpIcon)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  '&:before': {\r\n    display: 'block',\r\n    width: 21,\r\n    height: 21,\r\n    backgroundImage:\r\n      theme.palette.mode === 'dark'\r\n        ? `radial-gradient(#282C34,#282C34 28%,transparent 32%)`\r\n        : 'radial-gradient(#fff,#fff 28%,transparent 32%)',\r\n    content: '\"\"',\r\n  },\r\n}));\r\n\r\n// Inspired by blueprintjs\r\nfunction CustomRadio({ bgcolor, ...props }) {\r\n  return (\r\n    <Radio\r\n      sx={{\r\n        '&:hover': {\r\n          bgcolor: 'transparent',\r\n        },\r\n      }}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={\r\n        <BpCheckedIcon\r\n          sx={{\r\n            backgroundColor: bgcolor || 'primary.main',\r\n          }}\r\n        />\r\n      }\r\n      icon={<BpIcon />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nCustomRadio.propTypes = {\r\n  bgcolor: PropTypes.string,\r\n};\r\n\r\nexport default CustomRadio;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Select } from '@mui/material';\r\n\r\nconst CustomSelect = styled((props) => <Select {...props} />)(({ theme }) => ({\r\n  '& .MuiSelect-select': {\r\n    color: '#767e89',\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: `${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.12)' : '#dee3e9'}`,\r\n  },\r\n  '& .MuiSelect-select::-webkit-input-placeholder': {\r\n    color: '#767e89',\r\n    opacity: '1',\r\n  },\r\n}));\r\n\r\nexport default CustomSelect;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst CustomTextField = styled((props) => <TextField {...props} />)(({ theme }) => ({\r\n  '& .MuiOutlinedInput-input::-webkit-input-placeholder': {\r\n    color: '#767e89',\r\n    opacity: '1',\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: `${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.12)' : '#dee3e9'}`,\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled': {\r\n    backgroundColor: `${theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.12) ' : '#f8f9fb '}`,\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled::-webkit-input-placeholder': {\r\n    color: '#767e89',\r\n    opacity: '1',\r\n  },\r\n}));\r\n\r\nexport default CustomTextField;\r\n","import React, {useState,useEffect,useRef} from 'react';\r\nimport { Card, CardContent, Divider, Box, Typography, FormControl,Button } from '@mui/material';\r\nimport CustomDisabledButton from '../custom-elements/CustomDisabledButton';\r\nimport CustomOutlinedButton from '../custom-elements/CustomOutlinedButton';\r\nimport CustomTextField from '../custom-elements/CustomTextField';\r\nimport CustomFormLabel from '../custom-elements/CustomFormLabel';\r\n// import { rowContext } from '../../../views/form-layouts/FormLayouts';\r\nimport { useGlobalContext,useGlobalContextUpdates } from '../../../Context';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport API from '../../../utils/API';\r\n\r\nconst FbInputVariants = (props) => {\r\n\r\n  const navigate = useNavigate()\r\n  const context = useGlobalContext()\r\n  console.log(\"dss\")\r\n  console.log(context.plantCurrent)\r\n  const contextUpdate = useGlobalContextUpdates()\r\n  const handleClick=()=>{\r\n      navigate(\"/form-layouts/form-layouts/area\")\r\n  }\r\n\r\n\r\n//  const handleInputChange =(event)=>{\r\n//     // console.log(event.target)\r\n//     const value = event.target.value\r\n//     const name = event.target.name\r\n//     setPlantFormObject({...plantFormObject,[name]:value})\r\n//     // console.log(JSON.stringify(formObject))\r\n//  }\r\n\r\nconst handleInputChangePlantWorksheet=(event)=>{\r\n  // console.log(event.target)\r\n  const value = event.target.value\r\n  const name = event.target.name\r\n  switch(name){\r\n    case \"Plant Sqn\":\r\n      context.plantCurrent[0] = value\r\n      contextUpdate.currentPlantSet(context.plantCurrent)\r\n      break;\r\n    case \"Customer\":\r\n      context.plantCurrent[1] = value\r\n      contextUpdate.currentPlantSet(context.plantCurrent)\r\n      break;\r\n    case \"Name\":\r\n      context.plantCurrent[2] = value\r\n      contextUpdate.currentPlantSet(context.plantCurrent)\r\n      break;\r\n    case \"Location\":\r\n      context.plantCurrent[3] = value\r\n      contextUpdate.currentPlantSet(context.plantCurrent)\r\n      break;\r\n\r\n  }\r\n  \r\n\r\n\r\n  \r\n}\r\n\r\nconst handleSave=()=>{\r\n  API.postUserInfo(\"/configureplant/plantform\",{plantLvlRow:context.plantCurrent}).then(result=>{\r\n    console.log(`Successfully posted user info: ${JSON.stringify(result)}`)\r\n  }).catch(err=>{\r\n    console.log(`Error occurred trying to post plant form data: ${err}`)\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n      \r\n           {/* ------------------------------------------------------------------------------------------------ */}\r\n            {/* Basic Checkbox */}\r\n            {/* ------------------------------------------------------------------------------------------------ */}\r\n            <Card\r\n              sx={{\r\n                p: 0,\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  padding: '15px 30px',\r\n                }}\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Box flexGrow={1}>\r\n                  <Typography fontWeight=\"500\" variant=\"h4\">\r\n                    {props.name}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              <Divider />\r\n              <CardContent\r\n                sx={{\r\n                  padding: '30px',\r\n                }}\r\n              >\r\n                <form>\r\n                  <CustomFormLabel\r\n                    sx={{\r\n                      mt: 0,\r\n                    }}\r\n                    htmlFor=\"success-input\"\r\n                  >\r\n                    Plant Sqn\r\n                  </CustomFormLabel>\r\n                  <CustomTextField\r\n                    onChange={handleInputChangePlantWorksheet}\r\n                    id=\"Plant Sqn\"\r\n                    name = \"Plant Sqn\"\r\n                    variant=\"outlined\"\r\n                    defaultValue=\"\"\r\n                    fullWidth\r\n                    required\r\n                    size=\"small\"\r\n              \r\n                  />\r\n                  <CustomFormLabel \r\n                    sx={{\r\n                      mt: 0,\r\n                    }}>\r\n                      Customer\r\n                  </CustomFormLabel>\r\n                  <CustomTextField\r\n                    onChange={handleInputChangePlantWorksheet}\r\n                    id=\"Customer\"\r\n                    name = \"Customer\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    size=\"small\"\r\n                    \r\n                  />\r\n                  <CustomFormLabel\r\n                    sx={{\r\n                      mt: 0,\r\n                    }}\r\n                    htmlFor=\"success-input\"\r\n                  >\r\n                    Name\r\n                  </CustomFormLabel>\r\n                  <CustomTextField\r\n                    onChange={handleInputChangePlantWorksheet}\r\n                    id=\"Name\"\r\n                    name = \"Name\"\r\n                    variant=\"outlined\"\r\n                    defaultValue=\"\"\r\n                    fullWidth\r\n                    required\r\n                    size=\"small\"\r\n              \r\n                  />\r\n                  <CustomFormLabel\r\n                    sx={{\r\n                      mt: 0,\r\n                    }}\r\n                    htmlFor=\"success-input\"\r\n                  >\r\n                    Location\r\n                  </CustomFormLabel>\r\n                  <CustomTextField\r\n                    onChange={handleInputChangePlantWorksheet}\r\n                    id=\"Location\"\r\n                    name = \"Location\"\r\n                    variant=\"outlined\"\r\n                    defaultValue=\"\"\r\n                    fullWidth\r\n                    required\r\n                    size=\"small\"\r\n              \r\n                  />\r\n                \r\n              \r\n                  <Box\r\n                      sx={{\r\n                        display: {\r\n                          xs: 'block',\r\n                          sm: 'flex',\r\n                          lg: 'flex',\r\n                        },\r\n                        alignItems: 'center',\r\n                        mt: 3,\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        onClick={handleClick}\r\n                        variant=\"contained\"\r\n                        color=\"inherit\"\r\n                        sx={{\r\n                          mb: {\r\n                            xs: 1,\r\n                            sm: 0,\r\n                            lg: 0,\r\n                          },\r\n                        }}\r\n                      >\r\n                        Add New Area\r\n                      </Button>\r\n                \r\n                \r\n                    \r\n                      \r\n                  </Box>\r\n                  <div style={{height:10}}>\r\n\r\n                  </div>\r\n                  <div>\r\n                    <Button onClick={()=>handleSave()} name=\"plant\"color=\"primary\" variant=\"contained\" >\r\n                      Save\r\n                    </Button>\r\n                  </div>\r\n            \r\n                \r\n                </form>\r\n              </CardContent>\r\n            </Card>\r\n      \r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FbInputVariants;\r\n","import React, {useState,useEffect} from 'react';\r\nimport { Card, CardContent, Divider, Box, Typography, FormControl,Button,MenuItem } from '@mui/material';\r\n\r\nimport CustomTextField from '../custom-elements/CustomTextField';\r\nimport CustomFormLabel from '../custom-elements/CustomFormLabel';\r\nimport CustomSelect from '../custom-elements/CustomSelect';\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\nimport API from '../../../utils/API';\r\nimport { useGlobalContext,useGlobalContextUpdates } from '../../../Context';\r\n\r\n\r\nconst FbAsset = (props) => {\r\n\r\n \r\n  const navigate = useNavigate()\r\n  const context = useGlobalContext()\r\n  const contextUpdate = useGlobalContextUpdates()\r\n\r\n  console.log(\"EER\")\r\n  console.log(context.databaseData.picklist2.data.values)\r\n  const [picklist2,setpicklist2] = useState(context.databaseData.picklist2.data.values)\r\n  const [currentPick,setCurrentPick] = useState(picklist2[1][0])\r\n//  const handleInputChange =(event)=>{\r\n//     // console.log(event.target)\r\n//     const value = event.target.value\r\n//     const name = event.target.name\r\n//     setFormObject({...formObject,[name]:value})\r\n//     // console.log(JSON.stringify(formObject))\r\n//  }\r\n//  const handleFormSubmit = (event)=>{\r\n//     event.preventDefault()\r\n//     alert(JSON.stringify(formObject))\r\n//     //Create logic to change menu item array and dashboard information using the form object\r\n//  }\r\n\r\nconst handleNewCircuitClick=()=>{\r\n  navigate(\"/form-layouts/form-layouts/circuits\")\r\n}\r\n\r\n \r\nconst handleClick1=()=>{\r\n  navigate(\"/form-layouts/form-layouts\")\r\n}\r\n\r\nconst handleAddNewAssetClick=()=>{\r\n  contextUpdate.currentPlantAssetSet(Array(67).fill(null).fill(context.plantCurrent[2],0,1))\r\n  navigate(\"/form-layouts/form-layouts/asset\")\r\n}\r\n\r\ncontext.plantCurrentAsset[0] = context.plantCurrent[2]\r\ncontext.plantCurrentAsset[1] = context.plantCurrentArea[3]\r\nconst handleInputChangeAssetWorksheet=(event)=>{\r\n  // console.log(event.target)\r\n  const value = event.target.value\r\n  const name = event.target.name\r\n  switch(name){\r\n    case \"Plant\":\r\n      context.plantCurrentAsset[0] = value\r\n      contextUpdate.currentPlantAssetSet(context.plantCurrentAsset)\r\n      break;\r\n    case \"Plant Area\":\r\n      context.plantCurrentAsset[1] = value\r\n      contextUpdate.currentPlantAssetSet(context.plantCurrentAsset)\r\n      break;\r\n    case \"Asset ID\":\r\n      context.plantCurrentAsset[2] = value\r\n      contextUpdate.currentPlantAssetSet(context.plantCurrentAsset)\r\n      break;\r\n    case \"Equipment Type\":\r\n      //Create logic to select values from a pic list\r\n      console.log(\"checheche\")\r\n      context.plantCurrentAsset[3] = value\r\n      contextUpdate.currentPlantAssetSet(context.plantCurrentAsset)\r\n      break;\r\n    case \"Description\":\r\n        context.plantCurrentAsset[4] = value\r\n        contextUpdate.currentPlantAssetSet(context.plantCurrentAsset)\r\n        break;\r\n    case \"PID\":\r\n      context.plantCurrentAsset[5] = value\r\n      contextUpdate.currentPlantAssetSet(context.plantCurrentAsset)\r\n      break;\r\n    case \"NOTES\":\r\n        context.plantCurrentAsset[6] = value\r\n        contextUpdate.currentPlantAssetSet(context.plantCurrentAsset)\r\n        break;\r\n\r\n\r\n  }\r\n}\r\n\r\nconst handleSave=()=>{\r\n  API.postUserInfo(\"/configureplant/assetform\",{assetLvlRow:context.plantCurrentAsset}).then(result=>{\r\n    console.log(`Successfully posted user asset info: ${JSON.stringify(result)}`)\r\n  }).catch(err=>{\r\n    console.log(`Error occurred trying to post asset form data: ${err}`)\r\n  })\r\n}\r\n\r\nconst handleChange = (event) => {\r\n  setCurrentPick(event.target.value);\r\n  console.log(currentPick)\r\n  const value = event.target.value\r\n  const name = event.target.name\r\n  switch(name){\r\n\r\n    case \"Equipment Type\":\r\n      //Create logic to select values from a pic list\r\n      console.log(\"checheche\")\r\n      context.plantCurrentAsset[3] = value\r\n      contextUpdate.currentPlantAssetSet(context.plantCurrentAsset)\r\n      break;\r\n\r\n\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* ------------------------------------------------------------------------------------------------ */}\r\n      {/* Basic Checkbox */}\r\n      {/* ------------------------------------------------------------------------------------------------ */}\r\n      <Card\r\n        sx={{\r\n          p: 0,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            padding: '15px 30px',\r\n          }}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Box flexGrow={1}>\r\n            <Typography fontWeight=\"500\" variant=\"h4\">\r\n              {props.name}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n        <CardContent\r\n          sx={{\r\n            padding: '30px',\r\n          }}\r\n        >\r\n          <form>\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Plant\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAssetWorksheet}\r\n              id=\"Plant\"\r\n              name = \"Plant\"\r\n              variant=\"outlined\"\r\n              defaultValue={context.plantCurrent[2]}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Plant Area\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAssetWorksheet}\r\n              id=\"Plant Area\"\r\n              name = \"Plant Area\"\r\n              variant=\"outlined\"\r\n              defaultValue={context.plantCurrentArea[3]}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n             Asset ID\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAssetWorksheet}\r\n              id=\"Asset ID\"\r\n              name = \"Asset ID\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n          \r\n            {/* start */}\r\n              <CustomFormLabel htmlFor=\"demo-simple-select\">Equipment Type</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"Equipment Type\"\r\n                name = \"Equipment Type\"\r\n                id=\"Equipment Type\"\r\n                value={currentPick}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist2.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem name=\"Equipment Type\" value={item[0]}>{item[0]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n              {/* stop */}\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Description\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAssetWorksheet}\r\n              id=\"Description\"\r\n              name = \"Description\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              PID\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAssetWorksheet}\r\n              id=\"PID\"\r\n              name = \"PID\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              NOTES\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAssetWorksheet}\r\n              id=\"NOTES\"\r\n              name = \"NOTES\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <Box\r\n                sx={{\r\n                  display: {\r\n                    xs: 'block',\r\n                    sm: 'flex',\r\n                    lg: 'flex',\r\n                  },\r\n                  alignItems: 'center',\r\n                  mt: 3,\r\n                }}\r\n              >\r\n               \r\n     \r\n                  <Button\r\n                    onClick={handleClick1}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                    }}\r\n                  >\r\n                    Back to Plant\r\n                  </Button>\r\n                  <Button\r\n                    onClick={handleNewCircuitClick}\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                      ml: 1,\r\n                    }}\r\n                  >\r\n                   Add New Circuit\r\n                  </Button>\r\n                  <Button\r\n                    onClick={handleAddNewAssetClick}\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                      ml: 1,\r\n                    }}\r\n                  >\r\n                   Add New Asset\r\n                  </Button>\r\n               \r\n                \r\n             </Box>\r\n            <div style={{height:10}}>\r\n\r\n            </div>\r\n            <div>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={handleSave}>\r\n                Save\r\n              </Button>\r\n            </div>\r\n      \r\n          \r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FbAsset;\r\n","import React, {useState,useEffect} from 'react';\r\nimport { Card, CardContent, Divider, Box, Typography, FormControl,Button,MenuItem, Grid } from '@mui/material';\r\n\r\nimport CustomTextField from '../custom-elements/CustomTextField';\r\nimport CustomFormLabel from '../custom-elements/CustomFormLabel';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport API from '../../../utils/API';\r\nimport { useGlobalContext,useGlobalContextUpdates } from '../../../Context';\r\nimport CustomSelect from '../custom-elements/CustomSelect';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\n\r\n\r\n\r\n\r\nconst FbCircuit = (props) => {\r\n\r\n \r\n  const navigate = useNavigate()\r\n  const context = useGlobalContext()\r\n  const contextUpdate = useGlobalContextUpdates()\r\n  console.log(\"EER\")\r\n  console.log(context.databaseData)\r\n  const [picklist2,setpicklist2] = useState(context.databaseData.picklist2.data.values)\r\n  const [picklist1,setpicklist1] = useState(context.databaseData.picklist1.data.values)\r\n  const picklist1filtered = []\r\n  const picklist1filtered2 = []\r\n  // const temp = picklist1.map((item,index)=>{\r\n  //   if(!picklist1filtered.includes(item)){\r\n  //     picklist1filtered.push(item)\r\n  //     return item\r\n  //   }\r\n  // })\r\n  // console.log(\"ABC\")\r\n  // console.log(picklist1filtered)\r\n  // console.log(temp)\r\n \r\n  const [picklist3,setpicklist3] = useState(context.databaseData.picklist3.data.values)\r\n  const [picklist4,setpicklist4] = useState(context.databaseData.picklist4.data.values)\r\n  const [picklist5,setpicklist5] = useState(context.databaseData.picklist5.data.values)\r\n  const [picklist6,setpicklist6] = useState(context.databaseData.picklist6.data.values)\r\n  const [picklist7,setpicklist7] = useState(context.databaseData.picklist7.data.values)\r\n  const [alpha, setAlpha] = useState(context.databaseData.getRowsTableA.data.values)\r\n  const [prpx, setPrPx] = useState(context.databaseData.getRowsTableB.data.values)\r\n  const [copx, setCoPx] = useState(context.databaseData.getRowsTableC.data.values)\r\n  const [ys,setYS] = useState(context.databaseData.getRowsTableC.data.values)\r\n  const [currentPick,setCurrentPick] = useState(picklist3[1][0])\r\n  const [currentPickPrP1,setCurrentPickPrP1] = useState(\"\")\r\n  const [currentPickPrP2,setCurrentPickPrP2] = useState(\"\")\r\n  const [currentPickPrP3,setCurrentPickPrP3] = useState(\"\")\r\n  const [currentPickCoP1,setCurrentPickCoP1] = useState(\"\")\r\n  const [currentPickCoP2,setCurrentPickCoP2] = useState(\"\")\r\n  const [currentPickCoP3,setCurrentPickCoP3] = useState(\"\")\r\n  const [currentPickYS,setCurrentPickYS] = useState(\"\")\r\n  const [currentPickTS,setCurrentPickTS] = useState(\"\")\r\n  const [currentPickS,setCurrentPickS] = useState(\"\")\r\n  const [currentPickAlpha,setCurrentPickAlpha] = useState(\"\")\r\n  const [currentPickSystem,setCurrentPickSystem] = useState(\"\")\r\n  const [currentPickStream,setCurrentPickStream] = useState(\"\")\r\n  const [currentPickStreamDescription,setCurrentPickStreamDescription] = useState(\"\")\r\n  const [currentPickLining,setCurrentPickLining] = useState(\"\")\r\n  const [generalMaterial,setCurrentPickGeneralMaterial] = useState(\"\")\r\n  const [specificMaterial,setCurrentPickSpecificMaterial] = useState(\"\")\r\n  const [damageMechanism1,setCurrentPickDamageMechanism1] = useState(\"\")\r\n  const [damageType1,setCurrentPickDamageType1] = useState(\"\")\r\n  const [damageMechanism2,setCurrentPickDamageMechanism2] = useState(\"\")\r\n  const [damageType2,setCurrentPickDamageType2] = useState(\"\")\r\n  const [damageMechanism3,setCurrentPickDamageMechanism3] = useState(\"\")\r\n  const [damageType3,setCurrentPickDamageType3] = useState(\"\")\r\n  const [gff,setCurrentPickGff] = useState(0)\r\n  const [nps,setCurrentPickNPS] = useState(\"\")\r\n  const [pof,setCurrentPickPOF] = useState(\"\")\r\n  const [dfthinning,setCurrentPickDFThinning] = useState(\"\")\r\n  const [healthsafety,setCurrentPickHealthSafety] = useState(\"\")\r\n  const [economic,setCurrentPickEconomic] = useState(\"\")\r\n  const [environmental,setCurrentPickEvironmental] = useState(\"\")\r\n  const [cofmax,setCurrentPickCoFMax] = useState(\"\")\r\n  const [cofhealth,setCurrentPickCofhealth] = useState(0)\r\n  const [cofenvi,setCurrentPickCofenvi] = useState(0)\r\n  const [cofecon,setCurrentPickCofecon] = useState(0)\r\n  const [risk,setCurrentPickRisk] = useState(0)\r\n  // const [system,setCurrentPickSystem] = useState(\"\")\r\n  let CoFValues = Array(3).fill(null)\r\n  const health = [1,2,3,4,5]\r\n  const envi = [1,2,3,4,5]\r\n  const econ =[\"Greater Than 10,000,000 USD\",\"1,000,000 to 10,000,000 USD\", \"10,000 to 1,000,000 USD\", \"10,000 to 100,000 USD\", \"Less than 10,000 USD\"]\r\n  let CoFMax = 0\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  API.getUserInfo(\"/configureplant/trd\").then(result=>{\r\n    console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n    // setCurrentTrd(result.data.data.values[0][0])\r\n    console.log(\"BOOGIE\")\r\n    contextUpdate.setCurrentTrd(parseFloat(result.data.data.values[0][0]))\r\n    contextUpdate.setInitialTrd(parseFloat(result.data.data.values[0][0])) \r\n\r\n    console.log(\"WOOGIE\")\r\n\r\n  }).catch(err=>{\r\n    console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n  const handleClick1=()=>{\r\n    navigate(\"/form-layouts/form-layouts\")\r\n  }\r\n  const handleClick2=()=>{\r\n    navigate(\"/form-layouts/form-layouts/cml\")\r\n  }\r\n  const handleAddNewCircuitClick=()=>{\r\n    contextUpdate.currentPlantCircuitSet(Array(67).fill(null).fill(context.plantCurrentAsset[0],0,1).fill(context.plantCurrentAsset[1],1,2).fill(context.plantCurrentAsset[2],2,3).fill(context.plantCurrentAsset[3],3,4))\r\n    navigate(\"/form-layouts/form-layouts/circuits\")\r\n  }\r\n\r\n\r\n  //Area where calculations are performed\r\n  context.plantCurrentCircuit[0] = context.plantCurrentAsset[0]\r\n  context.plantCurrentCircuit[1] = context.plantCurrentAsset[1]\r\n  context.plantCurrentCircuit[2] = context.plantCurrentAsset[2]\r\n  context.plantCurrentCircuit[3] = context.plantCurrentAsset[3]\r\n  context.plantCurrentCircuit[4] = context.plantCurrentAsset[4]\r\n\r\n  const handleInputChangeCircuitWorksheet=(event)=>{\r\n    const value = event.target.value\r\n    const name = event.target.name\r\n    switch(name){\r\n      case \"Plant\":\r\n        context.plantCurrentCircuit[0] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Plant Area\":\r\n        context.plantCurrentCircuit[1] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Asset ID\":\r\n        context.plantCurrentCircuit[2] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Equipment Type\":\r\n        //Create logic to select values from a pic list\r\n        context.plantCurrentCircuit[3] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Asset Description\":\r\n        context.plantCurrentCircuit[4] = value\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          break;\r\n      case \"Circuit\":\r\n        context.plantCurrentCircuit[5] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n    \r\n      case \"Circuit Type\":\r\n        context.plantCurrentCircuit[6] = value\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          break;\r\n      case \"Circuit Description\":\r\n        context.plantCurrentCircuit[7] = value\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          break;\r\n      case \"PID\":\r\n        context.plantCurrentCircuit[8] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"System\":\r\n        context.plantCurrentCircuit[9] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Stream #\":\r\n        context.plantCurrentCircuit[10] = value\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          break;\r\n      case \"Stream Description\":\r\n        context.plantCurrentCircuit[11] = value\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          break;\r\n      case \"Vapor/Liquid Ratio\":\r\n        context.plantCurrentCircuit[12] = value\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          break;\r\n      case \"Manufacturer\":\r\n        context.plantCurrentCircuit[13] = value\r\n            contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n            break;\r\n      case \"Serial #\":\r\n        context.plantCurrentCircuit[14] = value\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          break;\r\n      case \"In-Service Date\":\r\n        console.log(\"In-Service Date\")\r\n        context.plantCurrentCircuit[15] = value\r\n            contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n            break;\r\n      case \"General Material\":\r\n          context.plantCurrentCircuit[16] = value\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          if(context.plantCurrentCircuit[17]!==null){\r\n            for(let i=0;i<picklist1.length;i++){\r\n              // for(let j=0;j<picklist1[0].length;j++){\r\n                \r\n              // }\r\n              if(picklist1[i][0]===context.plantCurrentCircuit[16]&&picklist1[i][1]===context.plantCurrentCircuit[17]){\r\n                API.updateUserInfo(\"/configureplant/ys\",{calculationInput:picklist1[i][3]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n                API.updateUserInfo(\"/configureplant/ts\",{calculationInput:picklist1[i][4]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n                API.updateUserInfo(\"/configureplant/s\",{calculationInput:picklist1[i][5]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n              }\r\n            }\r\n          }\r\n          break;\r\n      case \"Specific Material\":\r\n        context.plantCurrentCircuit[17] = value\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          if(context.plantCurrentCircuit[16]!==null){\r\n            for(let i=0;i<picklist1.length;i++){\r\n              // for(let j=0;j<picklist1[0].length;j++){\r\n                \r\n              // }\r\n              if(picklist1[i][0]===context.plantCurrentCircuit[16]&&picklist1[i][1]===context.plantCurrentCircuit[17]){\r\n                API.updateUserInfo(\"/configureplant/ys\",{calculationInput:picklist1[i][3]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n                API.updateUserInfo(\"/configureplant/ts\",{calculationInput:picklist1[i][4]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n                API.updateUserInfo(\"/configureplant/s\",{calculationInput:picklist1[i][5]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n              }\r\n            }\r\n          }\r\n          break;\r\n      case \"Insulation\":\r\n        console.log(\"Insulation\")\r\n        context.plantCurrentCircuit[18] = value\r\n            contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n            break;\r\n      case \"PWHT\":\r\n        context.plantCurrentCircuit[19] = value\r\n              contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n              break;\r\n\r\n      case \"Lining\":\r\n        context.plantCurrentCircuit[20] = value\r\n                contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n                break;\r\n      case \"Cladding\":\r\n        context.plantCurrentCircuit[21] = value\r\n                  contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n                  break;\r\n      case \"Design Pressure\":\r\n        context.plantCurrentCircuit[22] = value\r\n                    contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n                    break;\r\n      case \"Design Temperature\":\r\n        context.plantCurrentCircuit[23] = value\r\n                      contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n                      break;\r\n      case \"Operating Pressure\":\r\n        context.plantCurrentCircuit[24] = value\r\n                        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n                        break;\r\n      case \"Operating Temperature In\":\r\n        context.plantCurrentCircuit[25] = value\r\n                          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n                          break;\r\n      case \"Operating Temperature Out\":\r\n        context.plantCurrentCircuit[26] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Length\":\r\n        context.plantCurrentCircuit[27] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Inner Diameter\":\r\n        context.plantCurrentCircuit[28] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Outer Diameter\":\r\n        context.plantCurrentCircuit[29] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Original Thickness\":\r\n        context.plantCurrentCircuit[30] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Corrosion Allowance\":\r\n        context.plantCurrentCircuit[31] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Join Efficiency\":\r\n        context.plantCurrentCircuit[32] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Last Inspection Date\":\r\n          context.plantCurrentCircuit[74] = value\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          API.updateUserInfo(\"/configureplant/lastinspectiondate\",{calculationInput:value}).then(result=>{\r\n            console.log(`Successfully updated user last inspection date info: ${JSON.stringify(result)}`)\r\n          }).catch(err=>{\r\n            console.log(`Error occurred trying to update circuit form data (last inspection date): ${err}`)\r\n          })\r\n          break;\r\n      case \"In-Service Date\":\r\n        console.log(\"In-Service Date\")\r\n        context.plantCurrentCircuit[33] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Reduce Repair Rate\":\r\n        context.plantCurrentCircuit[34] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Estimated Repair Time\":\r\n        context.plantCurrentCircuit[35] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Dead Leg\":\r\n        console.log(\"Dead Leg\")\r\n        context.plantCurrentCircuit[36] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"IP/MP\":\r\n        context.plantCurrentCircuit[37] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"SA\":\r\n        context.plantCurrentCircuit[38] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"NPS\":\r\n        console.log(\"NPS\")\r\n        context.plantCurrentCircuit[39] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Notes\":\r\n        context.plantCurrentCircuit[40] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Mechanism 1\":\r\n        context.plantCurrentCircuit[41] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Type 1\":\r\n        context.plantCurrentCircuit[42] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"PoF 1\":\r\n        context.plantCurrentCircuit[43] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Alpha\":\r\n        context.plantCurrentCircuit[43] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"CR-Susceptibility 1\":\r\n        context.plantCurrentCircuit[44] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"CR-Susceptibility Type-Source 1\":\r\n        context.plantCurrentCircuit[45] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Mechanism 2\":\r\n        context.plantCurrentCircuit[46] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Type 2\":\r\n        context.plantCurrentCircuit[47] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"PoF 2\":\r\n        context.plantCurrentCircuit[48] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"CR-Susceptibility 2\":\r\n        console.log(\"CR-Susceptibility 2\")\r\n        context.plantCurrentCircuit[49] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"CR-Susceptibility Type-Source 2\":\r\n        context.plantCurrentCircuit[50] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Mechanism 3\":\r\n        context.plantCurrentCircuit[51] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Type 3\":\r\n        context.plantCurrentCircuit[52] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"PoF 3\":\r\n        context.plantCurrentCircuit[53] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"CR-Susceptibility 3\":\r\n        context.plantCurrentCircuit[54] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"CR-Susceptibility Type-Source 3\":\r\n        context.plantCurrentCircuit[55] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"DF Thinning\":\r\n        context.plantCurrentCircuit[56] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"DF Cracking\":\r\n        context.plantCurrentCircuit[57] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"DF Total\":\r\n        context.plantCurrentCircuit[58] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"GFF\":\r\n        context.plantCurrentCircuit[59] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"PoF Total\":\r\n        context.plantCurrentCircuit[60] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      // case \"Human\":\r\n      //   context.plantCurrentCircuit[61] = value\r\n      //   contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      //   break;\r\n      // case \"ENVI\":\r\n      //   context.plantCurrentCircuit[62] = value\r\n      //   contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      //   break;\r\n      // case \"ECO\":\r\n      //   context.plantCurrentCircuit[63] = value\r\n      //   contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      //   break;\r\n      case \"CoF Max\":\r\n        // context.plantCurrentCircuit[64] = value\r\n        // contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"CoF Economic\":\r\n        setCurrentPickEconomic(value)\r\n        context.plantCurrentCircuit[63] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"CoF Health/Safety\":\r\n        setCurrentPickHealthSafety(value)\r\n        context.plantCurrentCircuit[61] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"CoF Environmental\":\r\n        setCurrentPickEvironmental(value)\r\n        context.plantCurrentCircuit[62] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Risk Total\":\r\n        context.plantCurrentCircuit[65] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Shape\":\r\n        context.plantCurrentCircuit[66] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"I 1\":\r\n        context.plantCurrentCircuit[67] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \" I 2\":\r\n        context.plantCurrentCircuit[68] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"I 3\":\r\n        context.plantCurrentCircuit[69] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n\r\n\r\n\r\n    }\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    \r\n   \r\n    console.log(\"handleChangehandleChange\")\r\n    console.log(currentPick)\r\n    const value = event.target.value\r\n    const name = event.target.name\r\n    switch(name){\r\n  \r\n      case \"Circuit Type\":\r\n        setCurrentPick(event.target.value);\r\n        //Create logic to select values from a pic list\r\n        // console.log(\"checheche2\")\r\n        // context.plantCurrentCircuit[6] = value\r\n        // contextUpdate.currentPlantCircuitSet(context.plantCurrentCoP1)\r\n        break;\r\n      \r\n      case \"Co P1\":\r\n        setCurrentPickCoP1(event.target.value);\r\n        // context.plantCurrentCoP1 = value\r\n        // contextUpdate.currentPlantCoP1Set(context.plantCurrentCircuit)\r\n        API.updateUserInfo(\"/configureplant/cop1\",{calculationInput:value}).then(result=>{\r\n          console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break;\r\n      case \"Co P2\":\r\n        setCurrentPickCoP2(event.target.value);\r\n\r\n        // console.log(\"TRYTRYTRY\")\r\n        // context.currentCoP2 = value\r\n        // contextUpdate.setCurrentCoP2(context.currentCoP2)\r\n        API.updateUserInfo(\"/configureplant/cop2\",{calculationInput:event.target.value}).then(result=>{\r\n          console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break;\r\n      case \"Co P3\":\r\n        setCurrentPickCoP3(event.target.value);\r\n\r\n        // context.plantCurrentCoP3 = value\r\n        // contextUpdate.currentPlantCoP3Set(context.plantCurrentCoP3)\r\n        API.updateUserInfo(\"/configureplant/cop3\",{calculationInput:value}).then(result=>{\r\n          console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break;\r\n  \r\n      case \"Pr P1\":\r\n        console.log(\"TRYTRYTRY\")\r\n        setCurrentPickPrP1(event.target.value);\r\n\r\n        // context.plantCurrentPrP1 = value\r\n        // contextUpdate.currentPlantCoP3Set(context.plantCurrentPrP1)\r\n        API.updateUserInfo(\"/configureplant/prp1\",{calculationInput:value}).then(result=>{\r\n          console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break;\r\n      case \"Pr P2\":\r\n        setCurrentPickPrP2(event.target.value);\r\n\r\n        API.updateUserInfo(\"/configureplant/prp2\",{calculationInput:value}).then(result=>{\r\n          console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break\r\n      case \"Pr P3\":\r\n        setCurrentPickPrP3(event.target.value);\r\n\r\n        API.updateUserInfo(\"/configureplant/prp3\",{calculationInput:value}).then(result=>{\r\n          console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break;\r\n      case \"YS\":\r\n          setCurrentPickYS(event.target.value);\r\n  \r\n          API.updateUserInfo(\"/configureplant/ys\",{calculationInput:value}).then(result=>{\r\n            console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n          }).catch(err=>{\r\n            console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n          })\r\n          break;\r\n      case \"TS\":\r\n            setCurrentPickTS(event.target.value);\r\n    \r\n            API.updateUserInfo(\"/configureplant/ts\",{calculationInput:value}).then(result=>{\r\n              console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n            }).catch(err=>{\r\n              console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n            })\r\n            break;\r\n      case \"S\":\r\n        setCurrentPickS(event.target.value);\r\n    \r\n        API.updateUserInfo(\"/configureplant/s\",{calculationInput:value}).then(result=>{\r\n          console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break;\r\n      case \"Alpha\":\r\n        setCurrentPickAlpha(event.target.value)\r\n        API.updateUserInfo(\"/configureplant/alpha\",{calculationInput:value}).then(result=>{\r\n          console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break;\r\n      case \"System\":\r\n        setCurrentPickSystem(event.target.value)\r\n        context.plantCurrentCircuit[9] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        // API.updateUserInfo(\"/configureplant/alpha\",{calculationInput:value}).then(result=>{\r\n        //   console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        // }).catch(err=>{\r\n        //   console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        // })\r\n        break;\r\n      case \"Stream #\":\r\n        setCurrentPickStream(value)\r\n        context.plantCurrentCircuit[10] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Stream Description\":\r\n        setCurrentPickStreamDescription(value)\r\n        context.plantCurrentCircuit[11] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Lining\":\r\n        setCurrentPickLining(value)\r\n        context.plantCurrentCircuit[20] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Mechanism 1\":\r\n        setCurrentPickDamageMechanism1(value)\r\n        context.plantCurrentCircuit[41] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Type 1\":\r\n        setCurrentPickDamageType1(value)\r\n        context.plantCurrentCircuit[42] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Mechanism 2\":\r\n        setCurrentPickDamageMechanism2(value)\r\n        context.plantCurrentCircuit[46] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Type 2\":\r\n        setCurrentPickDamageType2(value)\r\n        context.plantCurrentCircuit[47] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Mechanism 3\":\r\n        setCurrentPickDamageMechanism3(value)\r\n        context.plantCurrentCircuit[51] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n      case \"Damage Type 3\":\r\n        setCurrentPickDamageType3(value)\r\n        context.plantCurrentCircuit[52] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        break;\r\n     \r\n      case \"General Material\":\r\n        setCurrentPickGeneralMaterial(event.target.value)\r\n        context.plantCurrentCircuit[16] = value\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          if(context.plantCurrentCircuit[17]!==null){\r\n            for(let i=0;i<picklist1.length;i++){\r\n              // for(let j=0;j<picklist1[0].length;j++){\r\n                \r\n              // }\r\n              if(picklist1[i][0]===context.plantCurrentCircuit[16]&&picklist1[i][1]===context.plantCurrentCircuit[17]){\r\n                API.updateUserInfo(\"/configureplant/ys\",{calculationInput:picklist1[i][3]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n                API.updateUserInfo(\"/configureplant/ts\",{calculationInput:picklist1[i][4]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n                API.updateUserInfo(\"/configureplant/s\",{calculationInput:picklist1[i][5]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n              }\r\n            }\r\n          }\r\n        break;\r\n      case \"Specific Material\":\r\n        setCurrentPickSpecificMaterial(event.target.value)\r\n        context.plantCurrentCircuit[17] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        API.updateUserInfo(\"/configureplant/specificmaterial\",{calculationInput:event.target.value}).then(result=>{\r\n          console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n          if(context.plantCurrentCircuit[16]!==null){\r\n            for(let i=0;i<picklist1.length;i++){\r\n              // for(let j=0;j<picklist1[0].length;j++){\r\n                \r\n              // }\r\n              if(picklist1[i][0]===context.plantCurrentCircuit[16]&&picklist1[i][1]===context.plantCurrentCircuit[17]){\r\n                API.updateUserInfo(\"/configureplant/ys\",{calculationInput:picklist1[i][3]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n                API.updateUserInfo(\"/configureplant/ts\",{calculationInput:picklist1[i][4]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n                API.updateUserInfo(\"/configureplant/s\",{calculationInput:picklist1[i][5]}).then(result=>{\r\n                  console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n                }).catch(err=>{\r\n                  console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n                })\r\n              }\r\n            }\r\n          }\r\n        break;\r\n      case \"Original Thickness\":\r\n        context.plantCurrentCircuit[30] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        API.updateUserInfo(\"/configureplant/originalthickness\",{calculationInput:value}).then(result=>{\r\n          console.log(`Successfully updated user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break;\r\n      case \"CR-Susceptibility 1\":\r\n        context.plantCurrentCircuit[44] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        API.updateUserInfo(\"/configureplant/crsusceptibility1\",{calculationInput:value}).then(result=>{\r\n          console.log(`Successfully updated user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break;\r\n    \r\n      case \"Inner Diameter\":\r\n        context.plantCurrentCircuit[28] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        API.updateUserInfo(\"/configureplant/innerdiameter\",{calculationInput:value}).then(result=>{\r\n          console.log(`Successfully updated user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break;\r\n      case \"Operating Pressure\":\r\n        context.plantCurrentCircuit[24] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        API.updateUserInfo(\"/configureplant/operatingpressure\",{calculationInput:value}).then(result=>{\r\n          console.log(`Successfully updated user circuit info: ${JSON.stringify(result)}`)\r\n        }).catch(err=>{\r\n          console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n        })\r\n        break;\r\n      case \"NPS\":\r\n        setCurrentPickNPS(value)\r\n        context.plantCurrentCircuit[39] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n         \r\n        if(context.plantCurrentAsset[3]===\"PIPE\"&&value<2){\r\n          console.log(\"World\")\r\n          setCurrentPickGff(2.8*(10**(-5)))\r\n          context.plantCurrentCircuit[59] = 2.8*(10**(-5))\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          API.updateUserInfo(\"/configureplant/gff\",{calculationInput:2.8*(10**(-5))}).then(result=>{\r\n            console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n      \r\n      \r\n      \r\n      \r\n          }).catch(err=>{\r\n            console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n          })\r\n          \r\n        }else{\r\n          console.log(\"Hello1\")\r\n          setCurrentPickGff(8*(10**(-6)))\r\n          context.plantCurrentCircuit[59] = 8*(10**(-6))\r\n          contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n          API.updateUserInfo(\"/configureplant/gff\",{calculationInput:8*(10**(-6))}).then(result=>{\r\n            console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n      \r\n      \r\n      \r\n      \r\n          }).catch(err=>{\r\n            console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n          })\r\n        }\r\n        break;\r\n      case \"CoF Health/Safety\":\r\n        setCurrentPickHealthSafety(value)\r\n        context.plantCurrentCircuit[61] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        let temp1 = 0\r\n        switch(value){\r\n          case 1:\r\n            console.log(\"hit1\")\r\n            console.log(cofhealth)\r\n            setCurrentPickCofhealth(1000) \r\n            temp1 = 1000\r\n            console.log(cofhealth)\r\n            break;\r\n          case 2:\r\n            console.log(cofhealth)\r\n            setCurrentPickCofhealth(10000) \r\n            temp1 = 10000\r\n            console.log(cofhealth)\r\n            break;\r\n          case 3:\r\n            console.log(cofhealth)\r\n            setCurrentPickCofhealth(100000) \r\n            temp1 = 100000\r\n            console.log(cofhealth)\r\n            break;\r\n          case 4:\r\n            console.log(cofhealth)\r\n            setCurrentPickCofhealth(1000000)\r\n            temp1 = 1000000 \r\n            console.log(cofhealth)\r\n            break;\r\n          case 5:\r\n            console.log(cofhealth)\r\n            setCurrentPickCofhealth(10000000)\r\n            temp1 = 10000000 \r\n            console.log(cofhealth)\r\n            break;\r\n        }\r\n        CoFMax = Math.max(cofecon,cofenvi,temp1)\r\n        console.log(\"RERERET1\")\r\n        console.log(CoFMax)\r\n        setCurrentPickCoFMax(CoFMax)\r\n        context.plantCurrentCircuit[64] = CoFMax\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit) \r\n        break;\r\n      case \"CoF Environmental\":\r\n        setCurrentPickEvironmental(value)\r\n        context.plantCurrentCircuit[62] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        let temp2 = 0\r\n        switch(value){\r\n          case 1:\r\n            console.log(cofenvi)\r\n            setCurrentPickCofenvi(1000) \r\n            temp2 = 1000\r\n            console.log(cofenvi)\r\n            break;\r\n          case 2:\r\n            console.log(cofenvi)\r\n            setCurrentPickCofenvi(10000) \r\n            temp2 = 10000\r\n            console.log(cofenvi)\r\n            break;\r\n          case 3:\r\n            console.log(cofenvi)\r\n            setCurrentPickCofenvi(100000) \r\n            temp2 = 100000\r\n            console.log(cofenvi)\r\n            break;\r\n          case 4:\r\n            console.log(cofenvi)\r\n            setCurrentPickCofenvi(1000000) \r\n            temp2 = 1000000\r\n            console.log(cofenvi)\r\n            break;\r\n          case 5:\r\n            console.log(cofenvi)\r\n            setCurrentPickCofenvi(10000000) \r\n            temp2 = 10000000\r\n            console.log(cofenvi)\r\n            break;\r\n        }\r\n        CoFMax = Math.max(cofecon,temp2,cofhealth)\r\n        console.log(\"RERERET2\")\r\n        console.log(CoFMax)\r\n        setCurrentPickCoFMax(CoFMax)\r\n        context.plantCurrentCircuit[64] = CoFMax\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit) \r\n        break;\r\n      case \"CoF Economic\":\r\n        setCurrentPickEconomic(value)\r\n        context.plantCurrentCircuit[63] = value\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit) \r\n        let temp3 = 0\r\n        switch(value){\r\n          case \"Greater Than 10,000,000 USD\":\r\n            console.log(\"hit3\")\r\n            console.log(cofecon)\r\n            setCurrentPickCofecon(10000000) \r\n            temp3= 10000000 \r\n            console.log(cofecon)\r\n            break;\r\n          case \"1,000,000 to 10,000,000 USD\":\r\n            console.log(cofecon)\r\n            setCurrentPickCofecon(1000000) \r\n            temp3= 1000000 \r\n            console.log(cofecon)\r\n            break;\r\n          case \"10,000,000 to 1,000,000 USD\":\r\n            console.log(cofecon)\r\n            setCurrentPickCofecon(100000) \r\n            temp3= 100000 \r\n            console.log(cofecon)\r\n            break;\r\n          case \"10,000 to 100,000 USD\":\r\n            console.log(cofecon)\r\n            setCurrentPickCofecon(10000)\r\n            temp3= 10000  \r\n            console.log(cofecon)\r\n            break;\r\n          case \"Less than 10,000 USD\":\r\n            console.log(cofecon)\r\n            setCurrentPickCofecon(1000) \r\n            temp3= 1000\r\n            console.log(cofecon)\r\n            break;\r\n        }\r\n        CoFMax = Math.max(temp3,cofenvi,cofhealth)\r\n        console.log(\"RERERET3\")\r\n        console.log(CoFMax)\r\n        setCurrentPickCoFMax(CoFMax)\r\n        context.plantCurrentCircuit[64] = CoFMax\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit) \r\n        break;\r\n      \r\n     \r\n  \r\n    }\r\n  };\r\n\r\n  const handleSave=()=>{\r\n    //Calculations performed when the save button is hit -> Shou\r\n\r\n    // figure out if we're actually supposed to get data from cml level\r\n   console.log(\"CoF Max\")\r\n   console.log(cofmax)\r\n   console.log(context.plantCurrentCircuit[64])\r\n    \r\n\r\n    API.getUserInfo(\"/configureplant/dfthinning\").then(result=>{\r\n   \r\n      console.log(`Successfully retrieved user df thinning info: ${parseFloat(result.data.data.values[0][0])}`)\r\n      console.log(\"gff & pof\")\r\n      console.log(gff)\r\n      console.log(result.data.data.values[0][0]*gff)\r\n      console.log(cofmax)\r\n\r\n      if(((3.06*(10**(-5)))>=(result.data.data.values[0][0]*gff))&&(cofmax==1000||cofmax==10000||cofmax==100000)){\r\n        console.log(\"currentlvl 1\") \r\n        console.log(result.data.data.values[0][0])\r\n        console.log(gff)\r\n        console.log((3.06*(10**(-4))))\r\n        console.log((3.06*(10**(-3))))\r\n        console.log(result.data.data.values[0][0]*gff)\r\n        console.log((result.data.data.values[0][0]*gff)<(3.06*(10**(-4))))  \r\n        contextUpdate.setCurrentLvl(1)\r\n      }else if(((3.06*(10**(-5)))<=(result.data.data.values[0][0]*gff))&&((result.data.data.values[0][0]*gff)<(3.06*(10**(-4))))&&(cofmax==1000||cofmax==10000)){\r\n        console.log(\"currentlvl 1\")\r\n        console.log(result.data.data.values[0][0])\r\n        console.log(gff)\r\n        console.log((3.06*(10**(-5))))\r\n        console.log((3.06*(10**(-4))))\r\n        console.log(result.data.data.values[0][0]*gff)\r\n        console.log((result.data.data.values[0][0]*gff)<(3.06*(10**(-4))))\r\n        console.log((3.06*(10**(-5)))<=(result.data.data.values[0][0]*gff))\r\n        contextUpdate.setCurrentLvl(1)\r\n      }else if(((3.06*(10**(-4)))<(result.data.data.values[0][0]*gff))&&((result.data.data.values[0][0]*gff)<(3.06*(10**(-3))))&&(cofmax==1000)){\r\n        console.log(\"currentlvl 1\")\r\n        console.log(result.data.data.values[0][0])\r\n        console.log(gff)\r\n        console.log((3.06*(10**(-4))))\r\n        console.log((3.06*(10**(-3))))\r\n        console.log(result.data.data.values[0][0]*gff)\r\n        console.log((3.06*(10**(-4)))<(result.data.data.values[0][0]*gff))\r\n        contextUpdate.setCurrentLvl(1)\r\n      }else if(((3.06*(10**(-3)))<(result.data.data.values[0][0]*gff))&&((result.data.data.values[0][0]*gff)<(3.06*(10**(-2))))&&(cofmax==1000||cofmax==10000)){\r\n        console.log(\"currentlvl 2\")\r\n        console.log(cofmax)\r\n        contextUpdate.setCurrentLvl(2)\r\n      }else if(((3.06*(10**(-4)))<(result.data.data.values[0][0]*gff))&&((result.data.data.values[0][0]*gff)<(3.06*(10**(-3))))&&(cofmax==10000||cofmax==100000)){\r\n        console.log(\"currentlvl 2\")\r\n        console.log(cofmax)\r\n        contextUpdate.setCurrentLvl(2)\r\n      }else if(((3.06*(10**(-5)))<=(result.data.data.values[0][0]*gff))&&((result.data.data.values[0][0]*gff)<(3.06*(10**(-4))))&&(cofmax==100000||cofmax==1000000)){\r\n        console.log(\"currentlvl 2\")\r\n        console.log(cofmax)\r\n        contextUpdate.setCurrentLvl(2)\r\n      }else if(((3.06*(10**(-5)))>=(result.data.data.values[0][0]*gff))&&(cofmax==1000000)){\r\n        console.log(\"currentlvl 2\")\r\n        console.log(cofmax)\r\n        contextUpdate.setCurrentLvl(2)\r\n      }//\r\n      else if(((3.06*(10**(-3)))<(result.data.data.values[0][0]*gff))&&((result.data.data.values[0][0]*gff)<(3.06*(10**(-2))))&&(cofmax===100000||cofmax===1000000)){\r\n        console.log(\"currentlvl 3\")\r\n       \r\n        contextUpdate.setCurrentLvl(3)\r\n      }else if(((3.06*(10**(-4)))<(result.data.data.values[0][0]*gff))&&((result.data.data.values[0][0]*gff)<(3.06*(10**(-3))))&&(cofmax==1000000)){\r\n        console.log(\"currentlvl 3\")\r\n       \r\n        contextUpdate.setCurrentLvl(3)\r\n      }else if(((3.06*(10**(-5)))<=(result.data.data.values[0][0]*gff))&&((result.data.data.values[0][0]*gff)<(3.06*(10**(-4))))&&(cofmax==10000000)){\r\n        console.log(\"currentlvl 3\")\r\n       \r\n        contextUpdate.setCurrentLvl(3)\r\n      }else if(((3.06*(10**(-5)))>=(result.data.data.values[0][0]*gff))&&(cofmax==10000000)){\r\n        console.log(\"currentlvl 3\")\r\n       \r\n        contextUpdate.setCurrentLvl(3)\r\n      }else if(((3.06*(10**(-2)))<(result.data.data.values[0][0]*gff))&&(cofmax==1000||cofmax==10000)){\r\n        console.log(\"currentlvl 3\")\r\n       \r\n        contextUpdate.setCurrentLvl(3)\r\n      }else if(((3.06*(10**(-2)))<(result.data.data.values[0][0]*gff))&&(cofmax==100000||cofmax==1000000||cofmax==10000000)){\r\n        console.log(\"currentlvl 4\")\r\n       \r\n        contextUpdate.setCurrentLvl(4)\r\n      }else if(((3.06*(10**(-3)))<(result.data.data.values[0][0]*gff))&&((result.data.data.values[0][0]*gff)<(3.06*(10**(-2))))&&(cofmax===10000000)){\r\n        console.log(\"currentlvl 4\")\r\n       \r\n        contextUpdate.setCurrentLvl(4)\r\n      }else if((((3.06*(10**(-4)))<(result.data.data.values[0][0]*gff))&&((result.data.data.values[0][0]*gff)<(3.06*(10**(-3)))))&&(cofmax===10000000)){\r\n        console.log(\"currentlvl 4\")\r\n       \r\n        contextUpdate.setCurrentLvl(4)\r\n      }\r\n      \r\n        setCurrentPickDFThinning(parseFloat(result.data.data.values[0][0]))      \r\n        context.plantCurrentCircuit[56] = parseFloat(result.data.data.values[0][0])\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        context.plantCurrentCircuit[58] = parseFloat(result.data.data.values[0][0])\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        console.log(\"Thinning\")\r\n        console.log(dfthinning)\r\n        setCurrentPickPOF(parseFloat(result.data.data.values[0][0])*gff)\r\n        context.plantCurrentCircuit[60] = parseFloat(result.data.data.values[0][0])*gff\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n        console.log(cofmax)\r\n        console.log(parseFloat(result.data.data.values[0][0])*gff*cofmax)\r\n        setCurrentPickRisk(parseFloat(result.data.data.values[0][0])*gff*cofmax)\r\n        context.plantCurrentCircuit[65] = parseFloat(result.data.data.values[0][0])*gff*cofmax\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      \r\n \r\n      \r\n    }).catch(err=>{\r\n      console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n    })\r\n\r\n    API.updateUserInfo(\"/configureplant/gff\",{calculationInput:gff}).then(result=>{\r\n      console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n\r\n\r\n\r\n\r\n    }).catch(err=>{\r\n      console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n    })\r\n\r\n  \r\n\r\n    API.getUserInfo(\"/configureplant/cr\").then(result=>{\r\n      console.log(`Successfullyget user cr info: ${JSON.stringify(result)}`)\r\n      contextUpdate.setCr(result.data.data.values[0][0])\r\n     }).catch(err=>{\r\n      console.log(`Error occurred trying to get cr form data: ${err}`)\r\n    })\r\n\r\n    \r\n    API.getUserInfo(\"/configureplant/lastinspectiondate\").then(result=>{\r\n      console.log(`Successfullyget user cr info: ${JSON.stringify(result)}`)\r\n      contextUpdate.setLastInspectionDate(result.data.data.values[0][0])\r\n     }).catch(err=>{\r\n      console.log(`Error occurred trying to get cr form data: ${err}`)\r\n    })\r\n\r\n\r\n \r\n\r\n  \r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n  }\r\n\r\n  const handleSave2=()=>{\r\n\r\n    let newlvl = context.currentlvl\r\n    contextUpdate.setCurrentNewlvl(context.currentlvl)\r\n    console.log(\"newlvl variable right after it is assigned currentlvl\")\r\n    console.log(newlvl)\r\n    console.log(\"This is the currentlvl variable after being used in newlvl assignment\")\r\n    console.log(context.currentlvl)\r\n    \r\n    let count = 0\r\n\r\n  \r\n    let trd = context.currenttrd\r\n    let nextinspectiondate = \"\"\r\n    console.log(\"Current lvl and new lvl variables:\")\r\n    console.log(context.currentlvl)\r\n    console.log(newlvl)\r\n    \r\n   let testArr =[]\r\n   for(let i=0;i<=trd;i+=.0005){\r\n      testArr.push(i)\r\n   }\r\n   console.log(\"This is the testArr\")\r\n   console.log(testArr)\r\n\r\n   let categoryMid = 0\r\n   let categoryMidPlusOne =0\r\n//------------------------------------------------\r\nconst binarySearch = async (arr)=>{\r\n    var length = arr.length;\r\n    var midPoint = Math.floor(length / 2);\r\n    var midPointPlusOne = midPoint+1\r\n    var newArr = arr;\r\n    console.log(arr);\r\n    console.log(\"array midpoint value: \" + arr[midPoint]);\r\n    if(length<=1){\r\n      console.log(\"Array finished\")\r\n      context.plantCurrentCircuit[73] = (context.initialtrd-trd)/context.cr\r\n      contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      context.plantCurrentCircuit[70] = trd\r\n      contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      await API.getUserInfo(\"/configureplant/nextinspectiondate\").then(result=>{\r\n        console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        contextUpdate.setNextInspectionDate(result.data.data.values[0][0])\r\n        nextinspectiondate = result.data.data.values[0][0]\r\n        context.plantCurrentCircuit[75] = nextinspectiondate\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      }).catch(err=>{\r\n        console.log(`Error occurred trying to get circuit form data: ${err}`)\r\n      })\r\n      return arr\r\n    }\r\n    if (categoryMidPlusOne===categoryMid-1) {\r\n      console.log(\"Jackpot!!! up at the top\")\r\n      console.log(categoryMid-1)\r\n      console.log(categoryMidPlusOne)\r\n      context.plantCurrentCircuit[73] = (context.initialtrd-trd)/context.cr\r\n      contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      context.plantCurrentCircuit[70] = trd\r\n      contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      await API.getUserInfo(\"/configureplant/nextinspectiondate\").then(result=>{\r\n        console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        contextUpdate.setNextInspectionDate(result.data.data.values[0][0])\r\n        nextinspectiondate = result.data.data.values[0][0]\r\n        context.plantCurrentCircuit[75] = nextinspectiondate\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      }).catch(err=>{\r\n        console.log(`Error occurred trying to get circuit form data: ${err}`)\r\n      })\r\n\r\n      return categoryMid\r\n    //if newlvl equal to current lvl equal to then take the left hand side of the midpoint\r\n    }\r\n    await API.updateUserInfo(\"/configureplant/trd\",{calculationInput: newArr[midPoint] }).then(result2=>{\r\n      console.log(\"mid value\")\r\n      console.log(newArr[midPoint])\r\n      console.log(`Successfully posted user trd info: ${JSON.stringify(result2)}`)\r\n    }).catch(err=>{\r\n      console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n    })\r\n    console.log(\"First PoF at midpoint\")\r\n    await API.getUserInfo(\"/configureplant/pof\").then(result=>{ \r\n     console.log(`Successfully retrieved user pof info: ${parseFloat(result.data.data.values[0][0])}`)\r\n     if(((3.06*(10**(-4)))<=result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===1000)||(((3.06*(10**(-5)))<=result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===1000||cofmax===10000))||(((3.06*(10**(-5)))>=result.data.data.values[0][0])&&(cofmax===1000||cofmax===10000||cofmax===100000))){\r\n       console.log(\"newlvl 1\")\r\n       console.log(result.data.data.values[0][0])\r\n       console.log(cofmax)\r\n       categoryMid = 1\r\n       console.log(newlvl-context.currentlvl)\r\n        \r\n     }\r\n     else if((((3.06*(10**(-2)))<result.data.data.values[0][0])&&(cofmax===10000000||cofmax===1000000||cofmax===100000))||(((3.06*(10**(-4)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===10000000))||(((3.06*(10**(-3)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===10000000))){\r\n       console.log(\"newlvl 4\")\r\n       console.log(result.data.data.values[0][0])\r\n       console.log(cofmax)\r\n       categoryMid = 4\r\n      //  contextUpdate.setCurrentNewlvl(3)\r\n          \r\n       console.log(newlvl-context.currentlvl)\r\n     }\r\n     else if(((3.06*(10**(-2)))<(result.data.data.values[0][0]))&&(cofmax===1000||cofmax===10000)||(((3.06*(10**(-5)))>=(result.data.data.values[0][0]))&&(cofmax===10000000))||(((3.06*(10**(-5)))<=parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===10000000))||(((3.06*(10**(-3)))<parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===1000000||cofmax===100000))||((3.06*(10**(-4)))<parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===1000000)){\r\n       console.log(\"newlvl 3\")\r\n       console.log(result.data.data.values[0][0])\r\n       console.log(cofmax)\r\n       categoryMid = 3\r\n       contextUpdate.setCurrentNewlvl(3)\r\n       \r\n       console.log(newlvl-context.currentlvl)\r\n     }    \r\n     else if(((3.06*(10**(-5)))>=result.data.data.values[0][0])&&(cofmax===1000000)||(((3.06*(10**(-5)))<=result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===100000||cofmax===1000000))||(((3.06*(10**(-4)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===100000||cofmax===10000))||(((3.06*(10**(-3)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===1000||cofmax===10000))){\r\n       console.log(\"newlvl 2\")\r\n       console.log(result.data.data.values[0][0])\r\n       console.log(cofmax)\r\n       categoryMid = 2\r\n        \r\n     }\r\n \r\n   }).catch(err=>{\r\n     console.log(`Error occurred trying to get user pof  data: ${err}`)\r\n   })\r\n   //--------------------------------------------------\r\n   await API.updateUserInfo(\"/configureplant/trd\",{calculationInput: newArr[midPointPlusOne] }).then(result2=>{\r\n    console.log(\"midplusone array value\")\r\n    console.log(newArr[midPointPlusOne])\r\n    console.log(`Successfully posted user trd info for midplusone: ${JSON.stringify(result2)}`)\r\n  }).catch(err=>{\r\n    console.log(`Error occurred trying to get user pof data: ${err}`)\r\n  })\r\n  console.log(\"First PoF at midpointplusone\")\r\n  await API.getUserInfo(\"/configureplant/pof\").then(result=>{ \r\n   console.log(`Successfully retrieved user pof info: ${parseFloat(result.data.data.values[0][0])}`)\r\n   if(((3.06*(10**(-4)))<=result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===1000)||(((3.06*(10**(-5)))<=result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===1000||cofmax===10000))||(((3.06*(10**(-5)))>=result.data.data.values[0][0])&&(cofmax===1000||cofmax===10000||cofmax===100000))){\r\n     console.log(\"newlvl 1\")\r\n     console.log(result.data.data.values[0][0])\r\n     console.log(cofmax)\r\n     categoryMidPlusOne = 1\r\n     console.log(newlvl-context.currentlvl)\r\n      \r\n   }\r\n   else if(((3.06*(10**(-4)))<parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===10000000)||(((3.06*(10**(-2)))<result.data.data.values[0][0])&&(cofmax===10000000||cofmax===1000000||cofmax===100000))||(((3.06*(10**(-4)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===10000000))||(((3.06*(10**(-3)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===10000000))){\r\n     console.log(\"newlvl 4\")\r\n     console.log(result.data.data.values[0][0])\r\n     console.log(cofmax)\r\n     categoryMidPlusOne = 4\r\n    //  contextUpdate.setCurrentNewlvl(3)\r\n        \r\n     console.log(newlvl-context.currentlvl)\r\n   }\r\n   else if(((3.06*(10**(-2)))<(result.data.data.values[0][0]))&&(cofmax===1000||cofmax===10000)||(((3.06*(10**(-5)))>=(result.data.data.values[0][0]))&&(cofmax===10000000))||(((3.06*(10**(-5)))<=parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===10000000))||(((3.06*(10**(-3)))<parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===1000000||cofmax===100000))||((3.06*(10**(-4)))<parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===1000000)){\r\n     console.log(\"newlvl 3\")\r\n     console.log(result.data.data.values[0][0])\r\n     console.log(cofmax)\r\n     categoryMidPlusOne = 3\r\n     contextUpdate.setCurrentNewlvl(3)\r\n     \r\n     console.log(newlvl-context.currentlvl)\r\n   }    \r\n   else if(((3.06*(10**(-5)))>=result.data.data.values[0][0])&&(cofmax===1000000)||(((3.06*(10**(-5)))<=result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===100000||cofmax===1000000))||(((3.06*(10**(-4)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===100000||cofmax===10000))||(((3.06*(10**(-3)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===1000||cofmax===10000))){\r\n     console.log(\"newlvl 2\")\r\n     console.log(result.data.data.values[0][0])\r\n     console.log(cofmax)\r\n     categoryMidPlusOne = 2\r\n      \r\n   }\r\n   \r\n }).catch(err=>{\r\n   console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n })\r\n    \r\n\r\n\r\n\r\n\r\n    //if newlvl is current lvl +1 then take the right hand side of the midpoint\r\n    if (categoryMidPlusOne===categoryMid-1) {\r\n      console.log(\"Jackpot!!!\")\r\n      console.log(categoryMid-1)\r\n      console.log(categoryMidPlusOne)\r\n      // var newArr = arr.slice(midPoint, arr.length);       \r\n      //   return binarySearch(newArr, searchNumb);\r\n      context.plantCurrentCircuit[73] = (context.initialtrd-trd)/context.cr\r\n      contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      context.plantCurrentCircuit[70] = trd\r\n      contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      await API.getUserInfo(\"/configureplant/nextinspectiondate\").then(result=>{\r\n        console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        contextUpdate.setNextInspectionDate(result.data.data.values[0][0])\r\n        nextinspectiondate = result.data.data.values[0][0]\r\n        context.plantCurrentCircuit[75] = nextinspectiondate\r\n        contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n      }).catch(err=>{\r\n        console.log(`Error occurred trying to get circuit form data: ${err}`)\r\n      })\r\n      return categoryMid\r\n    //if newlvl equal to current lvl equal to then take the left hand side of the midpoint\r\n    } else if ((categoryMid === categoryMidPlusOne)&& (categoryMid!==context.currentlvl)) {\r\n      console.log(\"Right side search\")\r\n      console.log(categoryMid)\r\n      console.log(categoryMidPlusOne)\r\n      console.log(arr.length)\r\n      console.log(context.currentlvl)\r\n\r\n      var newArr = arr.slice(midPoint, arr.length);\r\n       await binarySearch(newArr);\r\n\r\n        //if the pof at the midpoint and the pof at the midpoint +1 are different then that's our target\r\n    } else if((categoryMid === categoryMidPlusOne)&&(categoryMid===context.currentlvl)){\r\n      console.log(\"Left side search\")\r\n      console.log(categoryMid)\r\n      console.log(categoryMidPlusOne)\r\n      console.log(arr.length)\r\n      console.log(context.currentlvl)\r\n      var newArr = arr.slice(0, midPoint);\r\n      await binarySearch(newArr);\r\n    }\r\n   }\r\n   //------------------------------------Old recursion below\r\n  //  const  testfunc= async (n,m,c)=>{\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //     if((n!==m)||c===200){    \r\n  //       console.log(\"timetimetime\")\r\n  //       console.log(c)\r\n  //       console.log((context.initialtrd-trd)/context.cr)\r\n  //       console.log(context.initialtrd)\r\n  //       console.log(trd)\r\n  //       console.log(context.cr)\r\n  //       context.plantCurrentCircuit[73] = (context.initialtrd-trd)/context.cr\r\n  //       contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n  //       context.plantCurrentCircuit[70] = trd\r\n  //       contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n  //       await API.getUserInfo(\"/configureplant/nextinspectiondate\").then(result=>{\r\n  //         console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n  //         contextUpdate.setNextInspectionDate(result.data.data.values[0][0])\r\n  //         nextinspectiondate = result.data.data.values[0][0]\r\n  //         context.plantCurrentCircuit[75] = nextinspectiondate\r\n  //         contextUpdate.currentPlantCircuitSet(context.plantCurrentCircuit)\r\n  //       }).catch(err=>{\r\n  //         console.log(`Error occurred trying to get circuit form data: ${err}`)\r\n  //       })\r\n        \r\n  //       return n\r\n  //     }\r\n  //     count++\r\n  //     console.log(\"count\")\r\n  //     console.log(count)\r\n  //     console.log(\"newlvl-currentlvl at the top\")\r\n  //     console.log((newlvl-context.currentlvl)===0)\r\n  //     console.log(\"newlvl at the top\")\r\n  //     console.log(newlvl)\r\n  //     console.log(\"current lvl at the top\")\r\n  //     console.log(context.currentlvl)\r\n     \r\n  //     if(trd!==null){\r\n  //       console.log(\"currenttrd\")\r\n  //       console.log(trd)\r\n      \r\n  //      await API.updateUserInfo(\"/configureplant/trd\",{calculationInput: parseFloat(trd)-.001}).then(result2=>{\r\n  //         console.log(`Successfully posted user trd info: ${JSON.stringify(result2)}`)\r\n\r\n        \r\n\r\n\r\n          \r\n  //       }).catch(err=>{\r\n  //         console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n  //       })\r\n  //       trd = parseFloat(trd)-.001\r\n  //     }\r\n\r\n  //     console.log(\"CHUCHU\")\r\n\r\n     \r\n \r\n   \r\n  //      await API.getUserInfo(\"/configureplant/pof\").then(result=>{\r\n     \r\n  //       console.log(`Successfully retrieved user pof info: ${parseFloat(result.data.data.values[0][0])}`)\r\n        \r\n  //       // if(((3.06*(10**(-5)))>=result.data.data.values[0][0])&&(cofmax===1000||cofmax===10000||cofmax===100000)){\r\n  //       //   console.log(\"newlvl 1\")\r\n  //       //   console.log(result.data.data.values[0][0])\r\n  //       //   console.log(cofmax)\r\n  //       //   newlvl = 1\r\n  //       //    testfunc(1,m,c+1)\r\n  //       // }\r\n  //       // else if(((3.06*(10**(-5)))<=result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===1000||cofmax===10000)){\r\n  //       //   console.log(\"newlvl 1\")\r\n  //       //   console.log(result.data.data.values[0][0])\r\n  //       //   console.log(cofmax)\r\n  //       //   newlvl = 1\r\n  //       //   console.log(newlvl-context.currentlvl)\r\n  //       //    testfunc(1,m,c+1)\r\n  //       // }\r\n  //       if(((3.06*(10**(-4)))<=result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===1000)||(((3.06*(10**(-5)))<=result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===1000||cofmax===10000))||(((3.06*(10**(-5)))>=result.data.data.values[0][0])&&(cofmax===1000||cofmax===10000||cofmax===100000))){\r\n  //         console.log(\"newlvl 1\")\r\n  //         console.log(result.data.data.values[0][0])\r\n  //         console.log(cofmax)\r\n  //         newlvl = 1\r\n  //         console.log(newlvl-context.currentlvl)\r\n  //          testfunc(1,m,c+1)\r\n  //       }\r\n  //       // else if(((3.06*(10**(-3)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===10000000)){\r\n  //       //   console.log(\"newlvl 4\")\r\n  //       //   console.log(result.data.data.values[0][0])\r\n  //       //   console.log(cofmax)\r\n  //       //   newlvl = 4\r\n  //       //   console.log(newlvl-context.currentlvl)\r\n  //       //    testfunc(4,m,c+1)\r\n  //       // }\r\n  //       // else if(((3.06*(10**(-4)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===10000000)){\r\n  //       //   console.log(\"newlvl 4\")\r\n  //       //   console.log(result.data.data.values[0][0])\r\n  //       //   console.log(cofmax)\r\n  //       //   newlvl = 4\r\n  //       //   console.log(newlvl-context.currentlvl)\r\n  //       //    testfunc(4,m,c+1)\r\n  //       // }\r\n  //       // else if(((3.06*(10**(-2)))<result.data.data.values[0][0])&&(cofmax===10000000||cofmax===1000000||cofmax===100000)){\r\n  //       //   console.log(\"newlvl 4\")\r\n  //       //   console.log(result.data.data.values[0][0])\r\n  //       //   console.log(cofmax)\r\n  //       //   newlvl = 4\r\n  //       //   console.log(newlvl-context.currentlvl)\r\n  //       //    testfunc(4,m,c+1)\r\n  //       // }\r\n  //       else if(((3.06*(10**(-4)))<parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===1000000)||(((3.06*(10**(-2)))<result.data.data.values[0][0])&&(cofmax===10000000||cofmax===1000000||cofmax===100000))||(((3.06*(10**(-4)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===10000000))||(((3.06*(10**(-3)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===10000000))){\r\n  //         console.log(\"newlvl 4\")\r\n  //         console.log(result.data.data.values[0][0])\r\n  //         console.log(cofmax)\r\n  //         newlvl = 4\r\n  //         // newlvl++\r\n  //         contextUpdate.setCurrentNewlvl(3)\r\n  //          testfunc(4,m,c+1)\r\n          \r\n  //         console.log(newlvl-context.currentlvl)\r\n  //       }\r\n  //       // else if(((3.06*(10**(-3)))<parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===1000000||cofmax===100000)){\r\n  //       //   console.log(\"newlvl 3\")\r\n  //       //   console.log(result.data.data.values[0][0])\r\n  //       //   console.log(cofmax)\r\n  //       //   newlvl = 3\r\n  //       //   // newlvl++\r\n  //       //   contextUpdate.setCurrentNewlvl(3)\r\n  //       //    testfunc(3,m,c+1)\r\n          \r\n  //       //   console.log(newlvl-context.currentlvl)\r\n  //       // }\r\n  //       // else if(((3.06*(10**(-5)))<=parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===10000000)){\r\n  //       //   console.log(\"newlvl 3\")\r\n  //       //   console.log(result.data.data.values[0][0])\r\n  //       //   console.log(cofmax)\r\n  //       //   newlvl = 3\r\n  //       //   // newlvl++\r\n  //       //   contextUpdate.setCurrentNewlvl(3)\r\n  //       //    testfunc(3,m,c+1)\r\n          \r\n  //       //   console.log(newlvl-context.currentlvl)\r\n  //       // }\r\n  //       // else if(((3.06*(10**(-5)))>=(result.data.data.values[0][0]))&&(cofmax===10000000)){\r\n  //       //   console.log(\"newlvl 3\")\r\n  //       //   console.log(result.data.data.values[0][0])\r\n  //       //   console.log(cofmax)\r\n  //       //   newlvl = 3\r\n  //       //   // newlvl++\r\n  //       //   contextUpdate.setCurrentNewlvl(3)\r\n  //       //    testfunc(3,m,c+1)\r\n          \r\n  //       //   console.log(newlvl-context.currentlvl)\r\n  //       // }\r\n  //       else if(((3.06*(10**(-2)))<(result.data.data.values[0][0]))&&(cofmax===1000||cofmax===10000)||(((3.06*(10**(-5)))>=(result.data.data.values[0][0]))&&(cofmax===10000000))||(((3.06*(10**(-5)))<=parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===10000000))||(((3.06*(10**(-3)))<parseFloat(result.data.data.values[0][0]))&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===1000000||cofmax===100000))){\r\n  //         console.log(\"newlvl 3\")\r\n  //         console.log(result.data.data.values[0][0])\r\n  //         console.log(cofmax)\r\n  //         newlvl = 3\r\n  //         // newlvl++\r\n  //         contextUpdate.setCurrentNewlvl(3)\r\n  //          testfunc(3,m,c+1)\r\n          \r\n  //         console.log(newlvl-context.currentlvl)\r\n  //       }\r\n  //       // else if(((3.06*(10**(-3)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===1000||cofmax===10000)){\r\n  //       //   console.log(\"newlvl 2\")\r\n  //       //   console.log(result.data.data.values[0][0])\r\n  //       //   console.log(cofmax)\r\n  //       //   newlvl = 2\r\n  //       //    testfunc(2,m,c+1)\r\n  //       // }\r\n  //       // else if(((3.06*(10**(-4)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===100000||cofmax===10000)){\r\n  //       //   console.log(\"newlvl 2\")\r\n  //       //   console.log(result.data.data.values[0][0])\r\n  //       //   console.log(cofmax)\r\n  //       //   newlvl = 2\r\n  //       //    testfunc(2,m,c+1)\r\n  //       // }\r\n  //       // else if(((3.06*(10**(-5)))<=result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===100000||cofmax===1000000)){\r\n  //       //   console.log(\"newlvl 2\")\r\n  //       //   console.log(result.data.data.values[0][0])\r\n  //       //   console.log(cofmax)\r\n  //       //   newlvl = 2\r\n  //       //    testfunc(2,m,c+1)\r\n  //       // }\r\n  //       else if(((3.06*(10**(-5)))>=result.data.data.values[0][0])&&(cofmax===1000000)||(((3.06*(10**(-5)))<=result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-4))))&&(cofmax===100000||cofmax===1000000))||(((3.06*(10**(-4)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-3))))&&(cofmax===100000||cofmax===10000))||(((3.06*(10**(-3)))<result.data.data.values[0][0])&&(result.data.data.values[0][0]<(3.06*(10**(-2))))&&(cofmax===1000||cofmax===10000))){\r\n  //         console.log(\"newlvl 2\")\r\n  //         console.log(result.data.data.values[0][0])\r\n  //         console.log(cofmax)\r\n  //         newlvl = 2\r\n  //          testfunc(2,m,c+1)\r\n  //       }\r\n        \r\n\r\n\r\n  //       console.log(\"newlvl-currentlvl at the bottom\")\r\n  //       console.log((newlvl-context.currentlvl<1))\r\n   \r\n        \r\n  //     }).catch(err=>{\r\n  //       console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n  //     })\r\n\r\n\r\n   \r\n\r\n       \r\n  //     // await API.getUserInfo(\"/configureplant/trd\").then(result3=>{\r\n  //     //   console.log(`Successfully retrieved minimum trd: ${JSON.stringify(result3)}`)\r\n        \r\n  //     // }).catch(err=>{\r\n  //     //   console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n  //     // })\r\n      \r\n\r\n  //     // newlvl++\r\n  //     console.log(\"newlvl after the get api call\")\r\n  //     console.log(newlvl)\r\n  //     // console.log(context.newlvl)\r\n\r\n    \r\n  //  }\r\n\r\n    // const testfuncresult = testfunc(newlvl,context.currentlvl,0)\r\n    // console.log(\"testfuncresult\")\r\n    // console.log(testfuncresult)\r\n    // console.log(\"This is the new lvl after finishing the while loop\")\r\n    // console.log(newlvl)\r\n    // console.log(\"This is the currentlvl after finishing the while loop\")\r\n    // console.log(context.currentlvl)\r\n\r\n    const binarySearchResults = binarySearch(testArr)\r\n    console.log(\"binarySearch result\")\r\n    console.log(binarySearchResults)\r\n\r\n\r\n   \r\n\r\n  }\r\n\r\n  const handleSave3=()=>{\r\n\r\n\r\n\r\n    const testfunc2 = async ()=>{\r\n      await API.postUserInfo(\"/configureplant/circuitform\",{circuitLvlRow:context.plantCurrentCircuit}).then(result=>{\r\n        console.log(`Successfully posted user circuit info: ${JSON.stringify(result)}`)\r\n        \r\n      }).catch(err=>{\r\n        console.log(`Error occurred trying to post circuit form data: ${err}`)\r\n      })\r\n  \r\n    }\r\n   \r\n    testfunc2()\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* ------------------------------------------------------------------------------------------------ */}\r\n      {/* Basic Checkbox */}\r\n      {/* ------------------------------------------------------------------------------------------------ */}\r\n      <Card\r\n        sx={{\r\n          p: 0,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            padding: '15px 30px',\r\n          }}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Box flexGrow={1}>\r\n            <Typography fontWeight=\"500\" variant=\"h4\">\r\n              {props.name}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            padding: '15px 30px',\r\n          }}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid container >\r\n            <Grid item xs={12} sm={6} lg={6} style={{textAlign:\"center\"}}>\r\n           \r\n              Inputs\r\n         \r\n            </Grid>\r\n            <Grid item xs={12} sm={6} lg={6} style={{textAlign:\"center\"}}>\r\n           \r\n              Calculations\r\n          \r\n            </Grid>\r\n          </Grid>\r\n       \r\n        </Box>\r\n        <Divider />\r\n        <CardContent\r\n          sx={{\r\n            padding: '30px',\r\n          }}\r\n        >\r\n          <form>\r\n\r\n            <Grid container>\r\n              <Grid item xs={12} sm={5} lg={5} >\r\n              <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Plant \r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Plant\"\r\n              name = \"Plant\"\r\n              variant=\"outlined\"\r\n              defaultValue={context.plantCurrentAsset[0]}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Plant Area\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Plant Area\"\r\n              name = \"Plant Area\"\r\n              variant=\"outlined\"\r\n              defaultValue={context.plantCurrentAsset[1]}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Asset ID\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Asset ID\"\r\n              name = \"Asset ID\"\r\n              variant=\"outlined\"\r\n              defaultValue={context.plantCurrentAsset[2]}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Equipment Type\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Equipment Type\"\r\n              name = \"Equipment Type\"\r\n              variant=\"outlined\"\r\n              defaultValue={context.plantCurrentAsset[3]}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n               Asset Description\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Asset Description\"\r\n              name = \"Asset Description\"\r\n              variant=\"outlined\"\r\n              defaultValue={context.plantCurrentAsset[4]}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Circuit\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Circuit\"\r\n              name = \"Circuit\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel htmlFor=\"demo-simple-select\">Circuit Type</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"Circuit Type\"\r\n                name = \"Circuit Type\"\r\n                id=\"Circuit Type\"\r\n                value={currentPick}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist3.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem key={index} name=\"Circuit Type\" value={item[0]}>{item[0]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n              <CustomFormLabel htmlFor=\"demo-simple-select\">Pr P1</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"Pr P1\"\r\n                name =\"Pr P1\"\r\n                id=\"Pr P1\"\r\n                value={currentPickPrP1}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {prpx[1].map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                    \r\n                        [<ListSubheader>{prpx[0][index]}</ListSubheader>,\r\n                        <MenuItem name=\"Pr P1\" value={item}>{item}</MenuItem>]\r\n\r\n                   \r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n              <CustomFormLabel htmlFor=\"demo-simple-select\">Pr P2</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"Pr P2\"\r\n                name =\"Pr P2\"\r\n                id=\"Pr P2\"\r\n                value={currentPickPrP2}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {prpx[2].map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                    \r\n                    [<ListSubheader>{prpx[0][index]}</ListSubheader>,\r\n\r\n                    <MenuItem name=\"Pr P2\" value={item}>{item}</MenuItem>]\r\n\r\n                                          \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n              <CustomFormLabel htmlFor=\"demo-simple-select\">Pr P3</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"Pr P3\"\r\n                name =\"Pr P3\"\r\n                id=\"Pr P3\"\r\n                value={currentPickPrP3}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {prpx[3].map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                    \r\n                    [<ListSubheader>{prpx[0][index]}</ListSubheader>,\r\n\r\n                    <MenuItem name=\"Pr P3\" value={item}>{item}</MenuItem>]\r\n\r\n                  \r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n              <CustomFormLabel htmlFor=\"demo-simple-select\">Co P1</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"Co P1\"\r\n                name =\"Co P1\"\r\n                id=\"Co P1\"\r\n                value={currentPickCoP1}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {copx[1].map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n\r\n                   \r\n                      [<ListSubheader>{copx[0][index]}</ListSubheader>,\r\n                      <MenuItem name=\"Co P1\" value={item}>{item}</MenuItem>]\r\n                   \r\n                    \r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n                \r\n              </CustomSelect>\r\n              <CustomFormLabel htmlFor=\"demo-simple-select\">Co P2</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"Co P2\"\r\n                name =\"Co P2\"\r\n                id=\"Co P2\"\r\n                value={currentPickCoP2}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {copx[2].map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                   \r\n                    [<ListSubheader>{copx[0][index]}</ListSubheader>,\r\n                    <MenuItem name=\"Co P2\" value={item}>{item}</MenuItem>]\r\n                   \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n              \r\n              <CustomFormLabel htmlFor=\"demo-simple-select\">Co P3</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"Co P3\"\r\n                name =\"Co P3\"\r\n                id=\"Co P3\"\r\n                value={currentPickCoP3}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {copx[3].map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                    [<ListSubheader>{copx[0][index]}</ListSubheader>,\r\n                    <MenuItem name=\"Co P3\" value={item}>{item}</MenuItem>]\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n\r\n{/* \r\n              <CustomFormLabel htmlFor=\"demo-simple-select\">YS</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"YS\"\r\n                name =\"YS\"\r\n                id=\"YS\"\r\n                value={currentPickYS}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist1.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                    [<ListSubheader>{item[0]}</ListSubheader>,\r\n                    <MenuItem name=\"YS\" value={item[3]}>{item[3]}</MenuItem>]\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n\r\n              <CustomFormLabel htmlFor=\"demo-simple-select\">TS</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"TS\"\r\n                name =\"TS\"\r\n                id=\"TS\"\r\n                value={currentPickTS}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist1.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                    [<ListSubheader>{item[0]}</ListSubheader>,\r\n                    <MenuItem name=\"YS\" value={item[4]}>{item[4]}</MenuItem>]\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n\r\n              <CustomFormLabel htmlFor=\"demo-simple-select\">S</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"S\"\r\n                name =\"S\"\r\n                id=\"S\"\r\n                value={currentPickS}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist1.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                    [<ListSubheader>{item[0]}</ListSubheader>,\r\n                    <MenuItem name=\"YS\" value={item[5]}>{item[5]}</MenuItem>]\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect> */}\r\n\r\n              <CustomFormLabel htmlFor=\"demo-simple-select\">Alpha</CustomFormLabel>\r\n              <CustomSelect\r\n                labelId=\"Alpha\"\r\n                name =\"Alpha\"\r\n                id=\"Alpha\"\r\n                value={currentPickAlpha}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {alpha.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                    [<ListSubheader>{item[0]}</ListSubheader>,\r\n                    <MenuItem name=\"Alpha\" value={item[1]}>{item[1]}</MenuItem>]\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n             \r\n              \r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Circuit Description\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Circuit Description\"\r\n              name = \"Circuit Description\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                CoF Health/Safety\r\n            </CustomFormLabel>\r\n            {/* <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"CoF Health/Safety\"\r\n              name = \"CoF Health/Safety\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            /> */}\r\n               <CustomSelect\r\n                labelId=\"CoF Health/Safety\"\r\n                name =\"CoF Health/Safety\"\r\n                id=\"CoF Health/Safety\"\r\n                value={healthsafety}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {health.map((item,index)=>{\r\n                  \r\n                  return(\r\n                    \r\n                    \r\n                        [\r\n                        <MenuItem name=\"CoF Health/Safety\" value={item}>{item}</MenuItem>]\r\n\r\n                   \r\n                    \r\n                    \r\n                  )\r\n                  \r\n                })}\r\n              \r\n              </CustomSelect>\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                CoF Environmental\r\n            </CustomFormLabel>\r\n            {/* <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"ENVI.\"\r\n              name = \"ENVI.\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            /> */}\r\n               <CustomSelect\r\n                labelId=\"CoF Environmental\"\r\n                name =\"CoF Environmental\"\r\n                id=\"CoF Environmental\"\r\n                value={environmental}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {envi.map((item,index)=>{\r\n                  \r\n                  return(\r\n                    \r\n                    \r\n                        [\r\n                        <MenuItem name=\"CoF Environmental\" value={item}>{item}</MenuItem>]\r\n\r\n                   \r\n                    \r\n                    \r\n                  )\r\n                  \r\n                })}\r\n              \r\n              </CustomSelect>\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                CoF Economic\r\n            </CustomFormLabel>\r\n            {/* <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"ECO.\"\r\n              name = \"ECO.\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            /> */}\r\n            <CustomSelect\r\n                labelId=\"CoF Economic\"\r\n                name =\"CoF Economic\"\r\n                id=\"CoF Economic\"\r\n                value={economic}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {econ.map((item,index)=>{\r\n                  \r\n                  return(\r\n                    \r\n                    \r\n                        [\r\n                        <MenuItem name=\"CoF Economic\" value={item}>{item}</MenuItem>]\r\n\r\n                   \r\n                    \r\n                    \r\n                  )\r\n                  \r\n                })}\r\n              \r\n            </CustomSelect>\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                PID\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"PID\"\r\n              name = \"PID\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                System\r\n            </CustomFormLabel>\r\n            <CustomSelect\r\n                labelId=\"System\"\r\n                name = \"System\"\r\n                id=\"System\"\r\n                value={currentPickSystem}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist4.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem key={index} name=\"System\" value={item[2]}>{item[2]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Stream #\r\n            </CustomFormLabel>\r\n            <CustomSelect\r\n                labelId=\"Stream #\"\r\n                name = \"Stream #\"\r\n                id=\"Stream #\"\r\n                value={currentPickStream}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist5.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem key={index} name=\"Stream #\" value={item[0]}>{item[0]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Stream Description\r\n            </CustomFormLabel>\r\n            <CustomSelect\r\n                labelId=\"Stream Description\"\r\n                name = \"Stream Description\"\r\n                id=\"Stream Description\"\r\n                value={currentPickStreamDescription}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist5.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem key={index} name=\"Stream Description\" value={item[1]}>{item[1]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Vapor/Liquid Ratio\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Vapor/Liquid Ratio\"\r\n              name = \"Vapor/Liquid Ratio\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Manufacturer\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Manufacturer\"\r\n              name = \"Manufacturer\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Serial #\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Serial #\"\r\n              name = \"Serial #\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                In-Service Date\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"In-Service Date\"\r\n              name = \"In-Service Date\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                General Material\r\n            </CustomFormLabel>\r\n            <CustomSelect\r\n                labelId=\"General Material\"\r\n                name = \"General Material\"\r\n                id=\"General Material\"\r\n                value={generalMaterial}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist1.map((item,index)=>{\r\n                    if(index!==0){                   \r\n                      if(!picklist1filtered.includes(item[0])){\r\n                        picklist1filtered.push(item[0])\r\n                        return(\r\n                        \r\n                          <MenuItem key={index} name=\"General Material\" value={item[0]}>{item[0]}</MenuItem>\r\n                        \r\n                        \r\n                        )\r\n                      }\r\n                    }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Specific Material\r\n            </CustomFormLabel>\r\n            <CustomSelect\r\n                labelId=\"Specific Material\"\r\n                name = \"Specific Material\"\r\n                id=\"Specific Material\"\r\n                value={specificMaterial}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist1.map((item,index)=>{\r\n                  if(index!==0){\r\n                    if(!picklist1filtered2.includes(item[1])){\r\n                      picklist1filtered2.push(item[1])\r\n                      return(\r\n                      \r\n                        <MenuItem key={index} name=\"Specific Material\" value={item[1]}>{item[1]}</MenuItem>\r\n                      \r\n                      \r\n                      )\r\n                    }\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Insulation \r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Insulation \"\r\n              name = \"Insulation \"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                PWHT\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"PWHT\"\r\n              name = \"PWHT\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Lining\r\n            </CustomFormLabel>\r\n            {/* <CustomSelect\r\n                labelId=\"Lining\"\r\n                name = \"Lining\"\r\n                id=\"Lining\"\r\n                value={currentPickLining}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist1.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem key={index} name=\"Lining\" value={item[1]}>{item[1]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect> */}\r\n              <CustomTextField\r\n              onChange={handleChange}\r\n              value={currentPickLining}\r\n              labelId=\"Lining\"\r\n              name = \"Lining\"\r\n              id=\"Lining\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Cladding\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Cladding\"\r\n              name = \"Cladding\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Design Pressure\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Design Pressure\"\r\n              name = \"Design Pressure\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Design Temperature\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Design Temperature\"\r\n              name = \"Design Temperature\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Operating Pressure\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleChange}\r\n              id=\"Operating Pressure\"\r\n              name = \"Operating Pressure\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Operating Temperature In\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Operating Temperature In\"\r\n              name = \"Operating Temperature In\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Operating Temperature Out\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Operating Temperature Out\"\r\n              name = \"Operating Temperature Out\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Length\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Length\"\r\n              name = \"Length\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Inner Diameter\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleChange}\r\n              id=\"Inner Diameter\"\r\n              name = \"Inner Diameter\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Outer Diameter\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Outer Diameter\"\r\n              name = \"Outer Diameter\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Original Thickness\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleChange}\r\n              id=\"Original Thickness\"\r\n              name = \"Original Thickness\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Corrosion Allowance\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Corrosion Allowance\"\r\n              name = \"Corrosion Allowance\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Join Efficiency\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Join Efficiency\"\r\n              name = \"Join Efficiency\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n                <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Last Inspection Date\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Last Inspection Date\"\r\n              name = \"Last Inspection Date\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                In-Service Date\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"In-Service Date\"\r\n              name = \"In-Service Date\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Reduce Repair Rate\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Reduce Repair Rate\"\r\n              name = \"Reduce Repair Rate\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Estimated Repair Time\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Estimated Repair Time\"\r\n              name = \"Estimated Repair Time\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Dead LEG\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Dead Leg\"\r\n              name = \"Dead Leg\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                IP/MP\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"IP/MP\"\r\n              name = \"IP/MP\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                SA\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"SA\"\r\n              name = \"SA\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                NPS\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n\r\n              onChange={handleChange}\r\n              id=\"NPS\"\r\n              name = \"NPS\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Notes\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Notes\"\r\n              name = \"Notes\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Damage Mechanism 1\r\n            </CustomFormLabel>\r\n            <CustomSelect\r\n                labelId=\"Damage Mechanism 1\"\r\n                name = \"Damage Mechanism 1\"\r\n                id=\"Damage Mechanism 1\"\r\n                value={damageMechanism1}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist7.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem key={index} name=\"Damage Mechanism 1\" value={item[0]}>{item[0]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Damage Type 1\r\n            </CustomFormLabel>\r\n            <CustomSelect\r\n                labelId=\"Damage Type 1\"\r\n                name = \"Damage Type 1\"\r\n                id=\"Damage Type 1\"\r\n                value={damageType1}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist6.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem key={index} name=\"Damage Type 1\" value={item[0]}>{item[0]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n       \r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                CR-Susceptibility 1\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleChange}\r\n              id=\"CR-Susceptibility 1\"\r\n              name = \"CR-Susceptibility 1\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                CR-Susceptibility Type-Source 1\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"CR-Susceptibility Type-Source 1\"\r\n              name = \"CR-Susceptibility Type-Source 1\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Damage Mechanism 2\r\n            </CustomFormLabel>\r\n            {/* <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Damage Mechanism 2\"\r\n              name = \"Damage Mechanism 2\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            /> */}\r\n             <CustomSelect\r\n                labelId=\"Damage Mechanism 2\"\r\n                name = \"Damage Mechanism 2\"\r\n                id=\"Damage Mechanism 2\"\r\n                value={damageMechanism2}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist7.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem key={index} name=\"Damage Mechanism 2\" value={item[0]}>{item[0]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Damage Type 2\r\n            </CustomFormLabel>\r\n            {/* <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Damage Type 2\"\r\n              name = \"Damage Type 2\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            /> */}\r\n              <CustomSelect\r\n                labelId=\"Damage Type 2\"\r\n                name = \"Damage Type 2\"\r\n                id=\"Damage Type 2\"\r\n                value={damageType2}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist6.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem key={index} name=\"Damage Type 2\" value={item[0]}>{item[0]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n              \r\n          \r\n             <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                CR-Susceptibility Type-Source 2\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"CR-Susceptibility Type-Source 2\"\r\n              name = \"CR-Susceptibility Type-Source 2\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n             <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Damage Mechanism 3\r\n            </CustomFormLabel>\r\n            {/* <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Damage Mechanism 3\"\r\n              name = \"Damage Mechanism 3\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            /> */}\r\n              <CustomSelect\r\n                labelId=\"Damage Mechanism 3\"\r\n                name = \"Damage Mechanism 3\"\r\n                id=\"Damage Mechanism 3\"\r\n                value={damageMechanism3}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist7.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem key={index} name=\"Damage Mechanism 3\" value={item[0]}>{item[0]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n             <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Damage Type 3\r\n            </CustomFormLabel>\r\n            {/* <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"Damage Type 3\"\r\n              name = \"Damage Type 3\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            /> */}\r\n              <CustomSelect\r\n                labelId=\"Damage Type 3\"\r\n                name = \"Damage Type 3\"\r\n                id=\"Damage Type 3\"\r\n                value={damageType3}\r\n                onChange={handleChange}\r\n\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                {picklist6.map((item,index)=>{\r\n                  if(index!==0){\r\n                  return(\r\n                    \r\n                      <MenuItem key={index} name=\"Damage Type 3\" value={item[0]}>{item[0]}</MenuItem>\r\n                    \r\n                    \r\n                  )\r\n                  }\r\n                })}\r\n              \r\n              </CustomSelect>\r\n             \r\n             <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                CR-Susceptibility 3\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"CR-Susceptibility 3\"\r\n              name = \"CR-Susceptibility 3\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n             <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                 CR-Susceptibility 3 Type-Source 3\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCircuitWorksheet}\r\n              id=\"CR-Susceptibility 3 Type-Source 3\"\r\n              name = \"CR-Susceptibility 3 Type-Source 3\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n             \r\n              </Grid>\r\n              <Grid item xs={0} sm={2} lg={2}>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} sm={5} lg={5}>\r\n              <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                DF Cracking\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              value={\"N/A\"}\r\n              id=\"DF Cracking\"\r\n              name = \"DF Cracking\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                DF Thinning\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              value={dfthinning}\r\n              id=\"DF Thinning\"\r\n              name = \"DF Thinning\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                PoF \r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              value={pof}\r\n              id=\"PoF 1\"\r\n              name = \"PoF 1\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n           \r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                GFF\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              \r\n              id=\"GFF\"\r\n              name = \"GFF\"\r\n              variant=\"outlined\"\r\n              value={gff}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n             <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                DF Total\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              value={dfthinning}\r\n              id=\"DF Total\"\r\n              name = \"DF Total\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n             \r\n         \r\n             \r\n             \r\n             \r\n             <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                CoF Max\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              \r\n              id=\"CoF Max\"\r\n              name = \"CoF Max\"\r\n              variant=\"outlined\"\r\n              value={cofmax}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n             <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Risk \r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              \r\n              id=\"Risk Total\"\r\n              name = \"Risk Total\"\r\n              variant=\"outlined\"\r\n              value={risk}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n     \r\n            \r\n              </Grid>\r\n            </Grid>\r\n            \r\n             \r\n        \r\n             <Box\r\n                sx={{\r\n                  display: {\r\n                    xs: 'block',\r\n                    sm: 'flex',\r\n                    lg: 'flex',\r\n                  },\r\n                  alignItems: 'center',\r\n                  mt: 3,\r\n                }}\r\n              >\r\n               \r\n     \r\n                  <Button\r\n                    onClick={handleClick1}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                    }}\r\n                  >\r\n                    Back to Plant\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    onClick={handleAddNewCircuitClick}\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                      ml: 1,\r\n                    }}\r\n                  >\r\n                   Add New Circuit\r\n                  </Button>\r\n                  <Button\r\n                    onClick={handleClick2}\r\n                    variant=\"contained\"\r\n                    color=\"info\"\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                      ml: 1,\r\n                    }}\r\n                  >\r\n                    Add New CML\r\n                  </Button>\r\n                \r\n             </Box>\r\n            <div style={{height:10}}>\r\n\r\n            </div>\r\n            <div>\r\n              {/* <Button color=\"primary\" variant=\"contained\" onClick={handleSave} >\r\n                Calculate\r\n              </Button> */}\r\n             <Box\r\n                sx={{\r\n                  display: {\r\n                    xs: 'block',\r\n                    sm: 'flex',\r\n                    lg: 'flex',\r\n                  },\r\n                  alignItems: 'center',\r\n                  mt: 3,\r\n                }}\r\n              >\r\n               \r\n     \r\n                  <Button\r\n                    onClick={handleSave}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                    }}\r\n                  >\r\n                    Calculate Risk\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    onClick={handleSave2}\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                      ml: 1,\r\n                    }}\r\n                  >\r\n                   Calculate Next Inspection Date\r\n                  </Button>\r\n                \r\n                \r\n             </Box>\r\n            </div>\r\n            <div style={{height:10}}>\r\n\r\n            </div>\r\n            <div>\r\n              <Button color=\"danger\" variant=\"contained\" onClick={handleSave3} >\r\n                Save \r\n              </Button>\r\n            </div>\r\n      \r\n          \r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FbCircuit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport { Card, CardContent, Divider, Box, Typography, FormControl,Button } from '@mui/material';\r\nimport DataTable from './PickListTable';\r\nimport CustomTextField from '../custom-elements/CustomTextField';\r\nimport CustomFormLabel from '../custom-elements/CustomFormLabel';\r\n\r\n\r\nconst FbPickList = (props) => {\r\n\r\n  const [input,setInput] = useState()\r\n  const [formObject,setFormObject] = useState({})\r\n\r\n const handleInputChange =(event)=>{\r\n    // console.log(event.target)\r\n    const value = event.target.value\r\n    const name = event.target.name\r\n    setFormObject({...formObject,[name]:value})\r\n    // console.log(JSON.stringify(formObject))\r\n }\r\n const handleFormSubmit = (event)=>{\r\n    event.preventDefault()\r\n    alert(JSON.stringify(formObject))\r\n    //Create logic to change menu item array and dashboard information using the form object\r\n }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* ------------------------------------------------------------------------------------------------ */}\r\n      {/* Basic Checkbox */}\r\n      {/* ------------------------------------------------------------------------------------------------ */}\r\n      <Card\r\n        sx={{\r\n          p: 0,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            padding: '15px 30px',\r\n          }}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Box flexGrow={1}>\r\n            <Typography fontWeight=\"500\" variant=\"h4\">\r\n              {props.name}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n        <CardContent\r\n          sx={{\r\n            padding: '30px',\r\n          }}\r\n        >\r\n          <form>\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Materials Table\r\n            </CustomFormLabel>\r\n            <div style={{height:10}}>\r\n\r\n            </div>\r\n            <DataTable/>\r\n            <div style={{height:10}}>\r\n\r\n            </div>\r\n            <div>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={handleFormSubmit}>\r\n                Save\r\n              </Button>\r\n            </div>\r\n      \r\n          \r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FbPickList;\r\n","import React, {useState,useEffect} from 'react';\r\nimport { Card, CardContent, Divider, Box, Typography, FormControl,Button,MenuItem } from '@mui/material';\r\nimport CustomTextField from '../custom-elements/CustomTextField';\r\nimport CustomFormLabel from '../custom-elements/CustomFormLabel';\r\nimport { useNavigate } from 'react-router';\r\nimport API from '../../../utils/API';\r\nimport { useGlobalContext,useGlobalContextUpdates } from '../../../Context';\r\nimport CustomSelect from '../custom-elements/CustomSelect';\r\n\r\n\r\nconst FbCML = (props) => {\r\n  const navigate = useNavigate()\r\n  const context = useGlobalContext()\r\n  const contextUpdate = useGlobalContextUpdates()\r\n  console.log(\"CML\")\r\n  console.log(context.databaseData)\r\n  const [picklist2,setpicklist2] = useState(context.databaseData.picklist2.data.values)\r\n  const [picklist1,setpicklist1] = useState(context.databaseData.picklist1.data.values)\r\n  const [picklist3,setpicklist3] = useState(context.databaseData.picklist3.data.values)\r\n  const [currentPick,setCurrentPick] = useState(picklist3[1][0])\r\n  const handleClick1=()=>{\r\n    navigate(\"/form-layouts/form-layouts\")\r\n  }\r\n  const handleClick2=()=>{\r\n    navigate(\"/form-layouts/form-layouts/circuits\")\r\n  }\r\n  const handleAddNewCmlClick=()=>{\r\n    contextUpdate.currentPlantCmlSet(Array(17).fill(null).fill(context.plantCurrentCml[0],0,1).fill(context.plantCurrentCml[1],1,2).fill(context.plantCurrentCml[2],2,3))\r\n    navigate(\"/form-layouts/form-layouts/cml\")\r\n  }\r\n  context.plantCurrentCml[0] = context.plantCurrentCircuit[0]\r\n  context.plantCurrentCml[1] = context.plantCurrentCircuit[1]\r\n  context.plantCurrentCml[2] = context.plantCurrentCircuit[2]\r\n  context.plantCurrentCml[3] = context.plantCurrentCircuit[3]\r\n  // context.plantCurrentCml[4] = context.plantCurrentCircuit[4]\r\n  const handleInputChangeCmlWorksheet=(event)=>{\r\n    const value = event.target.value\r\n    const name = event.target.name\r\n    switch(name){\r\n      case \"Plant\":\r\n        context.plantCurrentCml[0] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"Plant Area\":\r\n        context.plantCurrentCml[1] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"Asset ID\":\r\n        context.plantCurrentCml[2] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"Circuit\":\r\n        //Create logic to select values from a pic list\r\n        context.plantCurrentCml[3] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      \r\n      case \"CML ID\":\r\n        context.plantCurrentCml[4] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"Description\":\r\n        context.plantCurrentCml[5] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"Insp. 1 Date\":\r\n        context.plantCurrentCml[6] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"Insp. Read. 1\":\r\n        context.plantCurrentCml[7] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"Insp. Date 2\":\r\n        context.plantCurrentCml[8] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"Insp. Read. 2\":\r\n        context.plantCurrentCml[9] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"ST CR\":\r\n        context.plantCurrentCml[10] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"LT CR\":\r\n        context.plantCurrentCml[11] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"CAR\":\r\n        context.plantCurrentCml[12] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"Est. CR\":\r\n        context.plantCurrentCml[13] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"T-MIN\":\r\n        context.plantCurrentCml[14] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"RL\":\r\n        context.plantCurrentCml[15] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n      case \"N B Thin\":\r\n        context.plantCurrentCml[16] = value\r\n        contextUpdate.currentPlantCmlSet(context.plantCurrentCml)\r\n        break;\r\n\r\n      \r\n\r\n\r\n    }\r\n  }\r\n  const handleSave=()=>{\r\n    API.postUserInfo(\"/configureplant/cmlform\",{cmlLvlRow:context.plantCurrentCml}).then(result=>{\r\n      console.log(`Successfully posted user cml info: ${JSON.stringify(result)}`)\r\n    }).catch(err=>{\r\n      console.log(`Error occurred trying to post cml form data: ${err}`)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* ------------------------------------------------------------------------------------------------ */}\r\n      {/* Basic Checkbox */}\r\n      {/* ------------------------------------------------------------------------------------------------ */}\r\n      <Card\r\n        sx={{\r\n          p: 0,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            padding: '15px 30px',\r\n          }}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Box flexGrow={1}>\r\n            <Typography fontWeight=\"500\" variant=\"h4\">\r\n              {props.name}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n        <CardContent\r\n          sx={{\r\n            padding: '30px',\r\n          }}\r\n        >\r\n          <form>\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Plant\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"Plant\"\r\n              name = \"Plant\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Plant Area\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"Plant Area\"\r\n              name = \"Plant Area\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Asset ID\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"Asset ID\"\r\n              name = \"Asset ID\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Circuit\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"Circuit\"\r\n              name = \"Circuit\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              CML ID\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"CML ID\"\r\n              name = \"CML ID\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Description\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"Description\"\r\n              name = \"Description\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Insp. 1 Date\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"Insp. 1 Date\"\r\n              name = \"Insp. 1 Date\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Insp. Read. 1\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"Insp. Read. 1\"\r\n              name = \"Insp. Read. 1\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Insp. Date 2\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"Insp. Date 2\"\r\n              name = \"Insp. Date 2\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Insp. Read. 2\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"Insp. Read. 2\"\r\n              name = \"Insp. Read. 2\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              ST CR\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"ST CR\"\r\n              name = \"ST CR\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              LT CR\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"LT CR\"\r\n              name = \"LT CR\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              CAR\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"CAR\"\r\n              name = \"CAR\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Est. CR\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"Est. CR\"\r\n              name = \"Est. CR\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              T-Min \r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"T-Min\"\r\n              name = \"T-Min\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              RL\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"RL\"\r\n              name = \"RL\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              N B Thin\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeCmlWorksheet}\r\n              id=\"N B Thin\"\r\n              name = \"N B Thin\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <Box\r\n                sx={{\r\n                  display: {\r\n                    xs: 'block',\r\n                    sm: 'flex',\r\n                    lg: 'flex',\r\n                  },\r\n                  alignItems: 'center',\r\n                  mt: 3,\r\n                }}\r\n              >\r\n               \r\n     \r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={handleClick2}\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                    }}\r\n                  >\r\n                    Back to Circuit\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    onClick={handleAddNewCmlClick}\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                      ml: 1,\r\n                    }}\r\n                  >\r\n                   Add New CML\r\n                  </Button>\r\n               \r\n                \r\n             </Box>\r\n            <div style={{height:10}}>\r\n\r\n            </div>\r\n            <div>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={handleSave}>\r\n                Save\r\n              </Button>\r\n            </div>\r\n      \r\n          \r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FbCML;\r\n","import React, {useState,useEffect} from 'react';\r\nimport { Card, CardContent, Divider, Box, Typography, FormControl,Button } from '@mui/material';\r\n\r\nimport CustomTextField from '../custom-elements/CustomTextField';\r\nimport CustomFormLabel from '../custom-elements/CustomFormLabel';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useGlobalContext,useGlobalContextUpdates } from '../../../Context';\r\nimport API from '../../../utils/API';\r\n\r\n\r\nconst FbArea = (props) => {\r\n\r\n  const [input,setInput] = useState()\r\n  const [formObject,setFormObject] = useState({})\r\n  const navigate = useNavigate()\r\n  const context = useGlobalContext()\r\n  const contextUpdate = useGlobalContextUpdates()\r\n\r\n//  const handleInputChange =(event)=>{\r\n//     // console.log(event.target)\r\n//     const value = event.target.value\r\n//     const name = event.target.name\r\n//     setFormObject({...formObject,[name]:value})\r\n//     // console.log(JSON.stringify(formObject))\r\n//  }\r\n//  const handleFormSubmit = (event)=>{\r\n//     event.preventDefault()\r\n//     alert(JSON.stringify(formObject))\r\n//     //Create logic to change menu item array and dashboard information using the form object\r\n//  }\r\n\r\n const handleNewAssetClick=()=>{\r\n  navigate(\"/form-layouts/form-layouts/assets\")\r\n}\r\nconst handleClick1=()=>{\r\n  navigate(\"/form-layouts/form-layouts\")\r\n}\r\n\r\nconst handleAddNewAreaClick=()=>{\r\n  contextUpdate.currentPlantAreaSet(Array(5).fill(null).fill(context.plantCurrent[2],2,3).fill(context.plantCurrent[1],1,2))\r\n  navigate(\"/form-layouts/form-layouts/area\")\r\n}\r\n\r\ncontext.plantCurrentArea[0] = context.plantCurrent[0]\r\ncontext.plantCurrentArea[1] = context.plantCurrent[1]\r\ncontext.plantCurrentArea[2] = context.plantCurrent[2]\r\n\r\nconst handleInputChangeAreaWorksheet=(event)=>{\r\n  // console.log(event.target)\r\n  const value = event.target.value\r\n  const name = event.target.name\r\n  switch(name){\r\n    case \"Unit Sqn\":\r\n      context.plantCurrentArea[0] = value\r\n      contextUpdate.currentPlantAreaSet(context.plantCurrentArea)\r\n      break;\r\n    case \"Customer\":\r\n      context.plantCurrentArea[1] = value\r\n      contextUpdate.currentPlantAreaSet(context.plantCurrentArea)\r\n      break;\r\n    case \"Plant Name\":\r\n      context.plantCurrentArea[2] = value\r\n      contextUpdate.currentPlantAreaSet(context.plantCurrentArea)\r\n      break;\r\n    case \"Plant Area\":\r\n      context.plantCurrentArea[3] = value\r\n      contextUpdate.currentPlantAreaSet(context.plantCurrentArea)\r\n      break;\r\n    case \"Description\":\r\n        context.plantCurrentArea[4] = value\r\n        contextUpdate.currentPlantAreaSet(context.plantCurrentArea)\r\n        break;\r\n    case \"Margin\":\r\n      context.plantCurrentArea[5] = value\r\n      contextUpdate.currentPlantAreaSet(context.plantCurrentArea)\r\n      break;\r\n\r\n\r\n  }\r\n}\r\n\r\nconst handleSave=()=>{\r\n  API.postUserInfo(\"/configureplant/areaform\",{areaLvlRow:context.plantCurrentArea}).then(result=>{\r\n    console.log(`Successfully posted user area info: ${JSON.stringify(result)}`)\r\n  }).catch(err=>{\r\n    console.log(`Error occurred trying to post area form data: ${err}`)\r\n  })\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* ------------------------------------------------------------------------------------------------ */}\r\n      {/* Basic Checkbox */}\r\n      {/* ------------------------------------------------------------------------------------------------ */}\r\n      <Card\r\n        sx={{\r\n          p: 0,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            padding: '15px 30px',\r\n          }}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Box flexGrow={1}>\r\n            <Typography fontWeight=\"500\" variant=\"h4\">\r\n              {props.name}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n        <CardContent\r\n          sx={{\r\n            padding: '30px',\r\n          }}\r\n        >\r\n          <form>\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Unit Sqn\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAreaWorksheet}\r\n              \r\n              id=\"Unit Sqn\"\r\n              name = \"Unit Sqn\"\r\n              variant=\"outlined\"\r\n              //is unit sqn the same as plant sqn???\r\n              defaultValue={context.plantCurrent[0]}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel \r\n              sx={{\r\n                mt: 0,\r\n              }}>\r\n                Customer\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAreaWorksheet}\r\n              id=\"Customer\"\r\n              name = \"Customer\"\r\n              variant=\"outlined\"\r\n              defaultValue={context.plantCurrent[1]}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n              \r\n            />\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n             Plant\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAreaWorksheet}\r\n              id=\"Plant Name\"\r\n              name = \"Plant Name\"\r\n              variant=\"outlined\"\r\n              defaultValue={context.plantCurrent[2]}\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Plant Area\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAreaWorksheet}\r\n              id=\"Plant Area\"\r\n              name = \"Plant Area\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Description\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAreaWorksheet}\r\n              id=\"Description\"\r\n              name = \"Description\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n            <CustomFormLabel\r\n              sx={{\r\n                mt: 0,\r\n              }}\r\n              htmlFor=\"success-input\"\r\n            >\r\n              Margin\r\n            </CustomFormLabel>\r\n            <CustomTextField\r\n              onChange={handleInputChangeAreaWorksheet}\r\n              id=\"Margin\"\r\n              name = \"Margin\"\r\n              variant=\"outlined\"\r\n              defaultValue=\"\"\r\n              fullWidth\r\n              required\r\n              size=\"small\"\r\n        \r\n            />\r\n             <Box\r\n                sx={{\r\n                  display: {\r\n                    xs: 'block',\r\n                    sm: 'flex',\r\n                    lg: 'flex',\r\n                  },\r\n                  alignItems: 'center',\r\n                  mt: 3,\r\n                }}\r\n              >\r\n               \r\n     \r\n                  <Button\r\n                    onClick={handleClick1}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                    }}\r\n                  >\r\n                    Back to Plant\r\n                  </Button>\r\n                  <Button\r\n                    onClick={handleNewAssetClick}\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                      ml: 1,\r\n                    }}\r\n                  >\r\n                   Add New Asset\r\n                  </Button>\r\n                  <Button\r\n                    onClick={handleAddNewAreaClick}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    sx={{\r\n                      mb: {\r\n                        xs: 1,\r\n                        sm: 0,\r\n                        lg: 0,\r\n                      },\r\n                      ml: 1,\r\n                    }}\r\n                  >\r\n                   Add New Area\r\n                  </Button>\r\n               \r\n                \r\n             </Box>\r\n            <div style={{height:10}}>\r\n\r\n            </div>\r\n            <div>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={handleSave}>\r\n                Save\r\n              </Button>\r\n            </div>\r\n      \r\n          \r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FbArea;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      p: '15px',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8}>\r\n      <Typography color=\"textSecondary\" fontWeight=\"400\" variant=\"h4\">\r\n        {subtitle}\r\n      </Typography>\r\n\r\n      <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link underline=\"none\" color=\"inherit\" component={NavLink} to={item.to}>\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color=\"textPrimary\">{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n      <Typography\r\n        fontWeight=\"700\"\r\n        variant=\"h1\"\r\n        sx={{\r\n          lineHeight: '1.235',\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display=\"flex\" alignItems=\"flex-end\">\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nBreadcrumb.propTypes = {\r\n  subtitle: PropTypes.string,\r\n  items: PropTypes.array,\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Breadcrumb;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nconsole.log(\"Inside the API folder\")\r\nconst axios = require(\"axios\");\r\n//import axios from \"axios\"\r\n//The base URL needs to be the same as the one react is running on, not the one express is running on.\r\n// const axiosinstance = axios.create({\r\n//     baseURL: 'http://localhost:3001'\r\n//  });\r\n\r\n const axiosinstance = axios.create({\r\n  baseURL: 'https://enigmatic-lowlands-22287.herokuapp.com/'\r\n});\r\n\r\n\r\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\r\n/*export default {\r\n  getUserInfo: function(query) {\r\n    return axios.get(query)\r\n  },\r\n  postUserInfo: function(query,data){\r\n      console.log(\"This is the data for post user info: \",data)\r\n      return axios.post(query,data)\r\n    \r\n  }\r\n}; */\r\n\r\n\r\nmodule.exports = {\r\n\r\n    getUserInfo: function(query) {\r\n      console.log(\"Inside getUserInfo\")\r\n      return axiosinstance.get(query)\r\n    },\r\n    postUserInfo: function(query,data){\r\n        console.log(\"This is the data for post user info: \",JSON.stringify(data))\r\n      \r\n        return axiosinstance.post(query,data)\r\n      \r\n    },\r\n    updateUserInfo: function(query,data){\r\n\r\n      console.log(\"This is the data for update user info: \",JSON.stringify(data))\r\n\r\n      return axiosinstance.put(query,data)\r\n    }\r\n  };"],"names":["title","description","children","name","content","BpIcon","styled","theme","borderRadius","width","height","boxShadow","palette","mode","backgroundColor","outline","outlineOffset","primary","background","BpCheckedIcon","display","backgroundImage","bgcolor","props","disableRipple","color","checkedIcon","sx","icon","inputProps","CustomDisabledButton","CustomFormLabel","variant","component","htmlFor","marginBottom","marginTop","CustomOutlinedButton","border","CustomSelect","borderColor","opacity","CustomTextField","navigate","useNavigate","context","useGlobalContext","console","log","plantCurrent","contextUpdate","useGlobalContextUpdates","handleInputChangePlantWorksheet","event","value","target","currentPlantSet","p","padding","alignItems","flexGrow","fontWeight","mt","onChange","id","defaultValue","fullWidth","required","size","xs","sm","lg","onClick","mb","style","API","plantLvlRow","then","result","JSON","stringify","catch","err","databaseData","picklist2","data","values","useState","currentPick","setCurrentPick","plantCurrentAsset","plantCurrentArea","handleInputChangeAssetWorksheet","currentPlantAssetSet","labelId","map","item","index","ml","Array","fill","assetLvlRow","picklist1","picklist1filtered","picklist1filtered2","picklist3","picklist4","picklist5","picklist6","picklist7","getRowsTableA","alpha","getRowsTableB","prpx","getRowsTableC","copx","currentPickPrP1","setCurrentPickPrP1","currentPickPrP2","setCurrentPickPrP2","currentPickPrP3","setCurrentPickPrP3","currentPickCoP1","setCurrentPickCoP1","currentPickCoP2","setCurrentPickCoP2","currentPickCoP3","setCurrentPickCoP3","setCurrentPickYS","setCurrentPickTS","setCurrentPickS","currentPickAlpha","setCurrentPickAlpha","currentPickSystem","setCurrentPickSystem","currentPickStream","setCurrentPickStream","currentPickStreamDescription","setCurrentPickStreamDescription","currentPickLining","setCurrentPickLining","generalMaterial","setCurrentPickGeneralMaterial","specificMaterial","setCurrentPickSpecificMaterial","damageMechanism1","setCurrentPickDamageMechanism1","damageType1","setCurrentPickDamageType1","damageMechanism2","setCurrentPickDamageMechanism2","damageType2","setCurrentPickDamageType2","damageMechanism3","setCurrentPickDamageMechanism3","damageType3","setCurrentPickDamageType3","gff","setCurrentPickGff","setCurrentPickNPS","pof","setCurrentPickPOF","dfthinning","setCurrentPickDFThinning","healthsafety","setCurrentPickHealthSafety","economic","setCurrentPickEconomic","environmental","setCurrentPickEvironmental","cofmax","setCurrentPickCoFMax","cofhealth","setCurrentPickCofhealth","cofenvi","setCurrentPickCofenvi","cofecon","setCurrentPickCofecon","risk","setCurrentPickRisk","CoFMax","setCurrentTrd","parseFloat","setInitialTrd","plantCurrentCircuit","handleInputChangeCircuitWorksheet","currentPlantCircuitSet","i","length","calculationInput","handleChange","temp1","Math","max","temp2","temp3","container","textAlign","ListSubheader","includes","push","setCurrentLvl","setCr","setLastInspectionDate","newlvl","currentlvl","setCurrentNewlvl","trd","currenttrd","nextinspectiondate","testArr","categoryMid","categoryMidPlusOne","binarySearch","arr","midPoint","floor","midPointPlusOne","newArr","initialtrd","cr","setNextInspectionDate","result2","slice","binarySearchResults","testfunc2","circuitLvlRow","plantCurrentCml","handleInputChangeCmlWorksheet","currentPlantCmlSet","cmlLvlRow","handleInputChangeAreaWorksheet","currentPlantAreaSet","areaLvlRow","subtitle","items","separator","fontSize","to","underline","NavLink","lineHeight","md","justifyContent","axiosinstance","require","create","baseURL","module","exports","getUserInfo","query","get","postUserInfo","post","updateUserInfo","put"],"sourceRoot":""}